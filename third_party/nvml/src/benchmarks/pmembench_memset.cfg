#
# pmembench_memset.cfg -- this is an example config file for pmembench
# with scenarios for pmem_memset benchmark
#

# Global parameters
[global]
file = testfile.memset
ops-per-thread = 10000

# memset benchmark with variable data sizes
# from 1 to 32 bytes
[pmem_memset_data_sizes_small]
bench = pmem_memset
threads = 1
data-size = 1:+1:32

# memset benchmark with variable data sizes
# from 64 to 8k bytes
# mode random
[pmem_memset_data_sizes_rand]
bench = pmem_memset
threads = 1
data-size = 64:*2:8192
mem-mode = rand

# memset benchmark with variable data sizes
# from 64 to 8k bytes
# offset 10
[pmem_memset_data_sizes_offset]
bench = pmem_memset
threads = 1
data-size = 64:*2:8192
dest-offset = 10

# memset benchmark with variable data sizes
# from 64 to 8k bytes
# mode sequential
# pmem_memset_persist()
[pmem_memset_pmem_memset_persist]
bench = pmem_memset
threads = 1
data-size = 64:*2:8192
memset = false
persist = true
mem-mode = seq

# memset benchmark with variable data sizes
# from 64 to 8k bytes
# mode sequential
# pmem_memset_nodrain()
[pmem_memset_pmem_memset_nodrain]
bench = pmem_memset
threads = 1
data-size = 64:*2:8192
memset = false
persist = false
mem-mode = seq

# memset benchmark with variable data sizes
# from 64 to 8k bytes
# mode sequential
# memset followed by pmem_persist()
[pmem_memset_libc_memset_persist]
bench = pmem_memset
threads = 1
data-size = 64:*2:8192
memset = true
persist = true
mem-mode = seq

# memset benchmark with variable data sizes
# from 64 to 8k bytes
# mode sequential
# memset followed by pmem_flush()
[pmem_memset_libc_memset_flush]
bench = pmem_memset
threads = 1
data-size = 64:*2:8192
memset = true
persist = false
mem-mode = seq

