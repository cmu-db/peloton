#!/bin/bash -e
#
# Copyright (c) 2015, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of Intel Corporation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# src/test/obj_check/TEST5 -- unit test for pmemobj_check
#
export UNITTEST_NAME=obj_check/TEST5
export UNITTEST_NUM=5

# standard unit test setup
. ../unittest/unittest.sh

setup

rm -f log$UNITTEST_NUM.log

SIZE=128

# Transaction lane section

# Set invalid transaction state
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj $DIR/testfile
$PMEMSPOIL $DIR/testfile "pmemobj.lane(0).tx.state=0xbaba"
expect_normal_exit ./obj_check$EXESUFFIX $DIR/testfile
cat out$UNITTEST_NUM.log >> log$UNITTEST_NUM.log
rm -f $DIR/testfile

# Set invalid internal_type for allocation
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj $DIR/testfile
expect_abnormal_exit $PMEMALLOC$EXESUFFIX -o$SIZE -ea $DIR/testfile
$PMEMSPOIL $DIR/testfile "pmemobj.lane(0).tx.undo_alloc.entry(0).oob.internal_type=0x5"
expect_normal_exit ./obj_check$EXESUFFIX $DIR/testfile
cat out$UNITTEST_NUM.log >> log$UNITTEST_NUM.log
rm -f $DIR/testfile

# Set invalid user_type for allocation
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj $DIR/testfile
expect_abnormal_exit $PMEMALLOC$EXESUFFIX -o$SIZE -ea $DIR/testfile
$PMEMSPOIL $DIR/testfile "pmemobj.lane(0).tx.undo_alloc.entry(0).oob.user_type=4096"
expect_normal_exit ./obj_check$EXESUFFIX $DIR/testfile
cat out$UNITTEST_NUM.log >> log$UNITTEST_NUM.log
rm -f $DIR/testfile

# Set invalid internal_type for free
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj $DIR/testfile
expect_abnormal_exit $PMEMALLOC$EXESUFFIX -o$SIZE -f -ef $DIR/testfile
$PMEMSPOIL $DIR/testfile "pmemobj.lane(0).tx.undo_free.entry(0).oob.internal_type=0x5"
expect_normal_exit ./obj_check$EXESUFFIX $DIR/testfile
cat out$UNITTEST_NUM.log >> log$UNITTEST_NUM.log
rm -f $DIR/testfile

# Set invalid user_type for free
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj $DIR/testfile
expect_abnormal_exit $PMEMALLOC$EXESUFFIX -o$SIZE -f -ef $DIR/testfile
$PMEMSPOIL $DIR/testfile "pmemobj.lane(0).tx.undo_free.entry(0).oob.user_type=4096"
expect_normal_exit ./obj_check$EXESUFFIX $DIR/testfile
cat out$UNITTEST_NUM.log >> log$UNITTEST_NUM.log
rm -f $DIR/testfile

# Set invalid offset in tx range
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj $DIR/testfile
expect_abnormal_exit $PMEMALLOC$EXESUFFIX -o$SIZE -s -es $DIR/testfile
$PMEMSPOIL $DIR/testfile "pmemobj.lane(0).tx.undo_set.entry(0).tx_range.offset=0"
expect_normal_exit ./obj_check$EXESUFFIX $DIR/testfile
cat out$UNITTEST_NUM.log >> log$UNITTEST_NUM.log
rm -f $DIR/testfile

# Set invalid size in tx range
expect_normal_exit $PMEMPOOL$EXESUFFIX create obj $DIR/testfile
INVALID_SIZE=$(stat -c%s $DIR/testfile)
expect_abnormal_exit $PMEMALLOC$EXESUFFIX -o$SIZE -s -es $DIR/testfile
$PMEMSPOIL $DIR/testfile "pmemobj.lane(0).tx.undo_set.entry(0).tx_range.size=$INVALID_SIZE"
expect_normal_exit ./obj_check$EXESUFFIX $DIR/testfile
cat out$UNITTEST_NUM.log >> log$UNITTEST_NUM.log
rm -f $DIR/testfile

mv log$UNITTEST_NUM.log out$UNITTEST_NUM.log

check

pass
