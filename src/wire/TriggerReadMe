There are two kinds of network thread: master network thread and worker network thread.

Master network thread is responsible for listening for client's connection.(https://github.com/cmu-db/peloton/blob/master/src/wire/libevent_server.cpp#L157) 
After master network thread accepts a client's connection request, it will dispatch the connection to one worker network thread(https://github.com/cmu-db/peloton/blob/master/src/wire/libevent_callbacks.cpp#L82). 
The chosen worker network thread will communicate with the client.(https://github.com/cmu-db/peloton/blob/master/src/wire/libevent_callbacks.cpp#L22)

How does the master network thread disapth the connection to one worker network thread? How does the master network thread informs the worker network thread?

Inside each worker network thread, there is pipe. (https://github.com/cmu-db/peloton/blob/master/src/wire/libevent_thread.cpp#L118)

The pipe has two endpoints, one is for writing and one is for reading. 

The worker network thread adds an event at the read endpoint of the pipe. Once something arrives at the read endpoint, the worker thread will be triggered. (https://github.com/cmu-db/peloton/blob/master/src/wire/libevent_thread.cpp#L130)

When receiving a new connection, the master network thread will write a char into the worker network thread's pipe. (https://github.com/cmu-db/peloton/blob/master/src/wire/libevent_thread.cpp#L130)

Then the reading endpoint of the pipe becomes readable. Then the worker network thread will check its connection queue to get the newest arriving connection.(https://github.com/cmu-db/peloton/blob/master/src/wire/libevent_callbacks.cpp#L43)
