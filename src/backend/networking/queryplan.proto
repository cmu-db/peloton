package peloton.networking;

// NameData should be transformed 
message FormAttributeMsg {
    required uint64 attrelid = 1;
    // The original is NameData structure which contains 64 bytes char array
    optional bytes attname = 2;
    optional uint64 atttypid = 3;
    optional int32 attstattarget = 4;
    // The original is int16 which should be cast for conversion
    optional int32 attlen = 5;
    // The original is int16 which should be cast for conversion
	optional int32 attnum = 6;
	optional int32 attndims = 7;
	optional int32 attcacheoff = 8;
	optional int32 atttypmod = 9;
	optional bool attbyval = 10;
	// The original is char which should be cast for conversion
	optional int32 attstorage = 11;
	// The original is char which should be cast for conversion
	optional int32 attalign = 12;
	optional bool attnotnull = 13;
	optional bool atthasdef = 14;
	optional bool attisdropped = 15;
	optional bool attislocal = 16;
	optional int32 attinhcount = 17;
	optional uint64 attcollation = 18;
}

// AttrDefault and ConstrCheck should be transformed
message TupleConstrMsg {
	// The following 2 members are AttrDefault in Postgres(int16	adnum and char *adbin)
    required int32 adnum = 1;
	optional bytes adbin = 2;
	// The following 4 members are ConstrCheck in Postgres
	optional bytes ccname = 3;
	optional bytes ccbin = 4;
	optional bool ccvalid = 5;
	optional bool ccnoinherit = 6;
	// The original is uint16 which should be cast for conversion
	optional uint32 num_defval = 7;
	// The original is uint16 which should be cast for conversion
	optional uint32 num_check = 8;
	optional bool has_not_null = 9;
}

message TupleDescMsg {
    required int32 natts = 1;
    repeated FormAttributeMsg attrs = 2;
    optional TupleConstrMsg constr = 3;
    optional uint64 tdtypeid = 4;
    optional int32 tdtypmod = 5;
    optional bool tdhasoid = 6;
    optional int32 tdrefcount = 7;
}