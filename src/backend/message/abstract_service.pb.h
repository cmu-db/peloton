// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: abstract_service.proto

#ifndef PROTOBUF_abstract_5fservice_2eproto__INCLUDED
#define PROTOBUF_abstract_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace peloton {
namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_abstract_5fservice_2eproto();
void protobuf_AssignDesc_abstract_5fservice_2eproto();
void protobuf_ShutdownFile_abstract_5fservice_2eproto();

class HeartbeatRequest;
class HeartbeatResponse;
class InitializeRequest;
class InitializeResponse;
class QueryEstimate;
class SendDataRequest;
class SendDataResponse;
class ShutdownPrepareRequest;
class ShutdownPrepareResponse;
class ShutdownRequest;
class ShutdownResponse;
class TimeSyncRequest;
class TimeSyncResponse;
class TransactionDebugRequest;
class TransactionDebugResponse;
class TransactionFinishRequest;
class TransactionFinishResponse;
class TransactionInitRequest;
class TransactionInitResponse;
class TransactionMapRequest;
class TransactionMapResponse;
class TransactionPrefetchAcknowledgement;
class TransactionPrefetchResult;
class TransactionPrepareRequest;
class TransactionPrepareResponse;
class TransactionRedirectRequest;
class TransactionRedirectResponse;
class TransactionReduceRequest;
class TransactionReduceResponse;
class TransactionReduceResponse_ReduceResult;
class TransactionWorkRequest;
class TransactionWorkResponse;
class UnevictDataRequest;
class UnevictDataResponse;
class WorkFragment;
class WorkResult;

enum Status {
  OK = 0,
  ABORT_USER = 1,
  ABORT_GRACEFUL = 2,
  ABORT_UNEXPECTED = 3,
  ABORT_CONNECTION_LOST = 4,
  ABORT_MISPREDICT = 5,
  ABORT_RESTART = 6,
  ABORT_REJECT = 7,
  ABORT_EVICTEDACCESS = 8,
  ABORT_SPECULATIVE = 9
};
bool Status_IsValid(int value);
const Status Status_MIN = OK;
const Status Status_MAX = ABORT_SPECULATIVE;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
// ===================================================================

class WorkFragment : public ::google::protobuf::Message {
 public:
  WorkFragment();
  virtual ~WorkFragment();

  WorkFragment(const WorkFragment& from);

  inline WorkFragment& operator=(const WorkFragment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkFragment& default_instance();

  void Swap(WorkFragment* other);

  // implements Message ----------------------------------------------

  inline WorkFragment* New() const { return New(NULL); }

  WorkFragment* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkFragment& from);
  void MergeFrom(const WorkFragment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorkFragment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 partition_id = 1;
  bool has_partition_id() const;
  void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  ::google::protobuf::int32 partition_id() const;
  void set_partition_id(::google::protobuf::int32 value);

  // repeated int32 fragment_id = 2 [packed = true];
  int fragment_id_size() const;
  void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 2;
  ::google::protobuf::int32 fragment_id(int index) const;
  void set_fragment_id(int index, ::google::protobuf::int32 value);
  void add_fragment_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fragment_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fragment_id();

  // repeated int32 input_dep_id = 3 [packed = true];
  int input_dep_id_size() const;
  void clear_input_dep_id();
  static const int kInputDepIdFieldNumber = 3;
  ::google::protobuf::int32 input_dep_id(int index) const;
  void set_input_dep_id(int index, ::google::protobuf::int32 value);
  void add_input_dep_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      input_dep_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_input_dep_id();

  // repeated int32 output_dep_id = 4 [packed = true];
  int output_dep_id_size() const;
  void clear_output_dep_id();
  static const int kOutputDepIdFieldNumber = 4;
  ::google::protobuf::int32 output_dep_id(int index) const;
  void set_output_dep_id(int index, ::google::protobuf::int32 value);
  void add_output_dep_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      output_dep_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_output_dep_id();

  // repeated int32 param_index = 5 [packed = true];
  int param_index_size() const;
  void clear_param_index();
  static const int kParamIndexFieldNumber = 5;
  ::google::protobuf::int32 param_index(int index) const;
  void set_param_index(int index, ::google::protobuf::int32 value);
  void add_param_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      param_index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_param_index();

  // repeated int32 stmt_counter = 6 [packed = true];
  int stmt_counter_size() const;
  void clear_stmt_counter();
  static const int kStmtCounterFieldNumber = 6;
  ::google::protobuf::int32 stmt_counter(int index) const;
  void set_stmt_counter(int index, ::google::protobuf::int32 value);
  void add_stmt_counter(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stmt_counter() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stmt_counter();

  // repeated int32 stmt_index = 7 [packed = true];
  int stmt_index_size() const;
  void clear_stmt_index();
  static const int kStmtIndexFieldNumber = 7;
  ::google::protobuf::int32 stmt_index(int index) const;
  void set_stmt_index(int index, ::google::protobuf::int32 value);
  void add_stmt_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stmt_index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stmt_index();

  // repeated bool stmt_ignore = 8 [packed = true];
  int stmt_ignore_size() const;
  void clear_stmt_ignore();
  static const int kStmtIgnoreFieldNumber = 8;
  bool stmt_ignore(int index) const;
  void set_stmt_ignore(int index, bool value);
  void add_stmt_ignore(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      stmt_ignore() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_stmt_ignore();

  // required bool read_only = 9;
  bool has_read_only() const;
  void clear_read_only();
  static const int kReadOnlyFieldNumber = 9;
  bool read_only() const;
  void set_read_only(bool value);

  // optional bool needs_input = 10 [default = false];
  bool has_needs_input() const;
  void clear_needs_input();
  static const int kNeedsInputFieldNumber = 10;
  bool needs_input() const;
  void set_needs_input(bool value);

  // optional bool last_fragment = 11 [default = false];
  bool has_last_fragment() const;
  void clear_last_fragment();
  static const int kLastFragmentFieldNumber = 11;
  bool last_fragment() const;
  void set_last_fragment(bool value);

  // optional bool prefetch = 12 [default = false];
  bool has_prefetch() const;
  void clear_prefetch();
  static const int kPrefetchFieldNumber = 12;
  bool prefetch() const;
  void set_prefetch(bool value);

  // optional bool force = 13 [default = false];
  bool has_force() const;
  void clear_force();
  static const int kForceFieldNumber = 13;
  bool force() const;
  void set_force(bool value);

  // @@protoc_insertion_point(class_scope:peloton.message.WorkFragment)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_read_only();
  inline void clear_has_read_only();
  inline void set_has_needs_input();
  inline void clear_has_needs_input();
  inline void set_has_last_fragment();
  inline void clear_has_last_fragment();
  inline void set_has_prefetch();
  inline void clear_has_prefetch();
  inline void set_has_force();
  inline void clear_has_force();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fragment_id_;
  mutable int _fragment_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > input_dep_id_;
  mutable int _input_dep_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > output_dep_id_;
  mutable int _output_dep_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > param_index_;
  mutable int _param_index_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stmt_counter_;
  mutable int _stmt_counter_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stmt_index_;
  mutable int _stmt_index_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > stmt_ignore_;
  mutable int _stmt_ignore_cached_byte_size_;
  ::google::protobuf::int32 partition_id_;
  bool read_only_;
  bool needs_input_;
  bool last_fragment_;
  bool prefetch_;
  bool force_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static WorkFragment* default_instance_;
};
// -------------------------------------------------------------------

class WorkResult : public ::google::protobuf::Message {
 public:
  WorkResult();
  virtual ~WorkResult();

  WorkResult(const WorkResult& from);

  inline WorkResult& operator=(const WorkResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkResult& default_instance();

  void Swap(WorkResult* other);

  // implements Message ----------------------------------------------

  inline WorkResult* New() const { return New(NULL); }

  WorkResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkResult& from);
  void MergeFrom(const WorkResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorkResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 partition_id = 1;
  bool has_partition_id() const;
  void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  ::google::protobuf::int32 partition_id() const;
  void set_partition_id(::google::protobuf::int32 value);

  // repeated int32 dep_id = 2 [packed = true];
  int dep_id_size() const;
  void clear_dep_id();
  static const int kDepIdFieldNumber = 2;
  ::google::protobuf::int32 dep_id(int index) const;
  void set_dep_id(int index, ::google::protobuf::int32 value);
  void add_dep_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dep_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dep_id();

  // repeated bytes dep_data = 3;
  int dep_data_size() const;
  void clear_dep_data();
  static const int kDepDataFieldNumber = 3;
  const ::std::string& dep_data(int index) const;
  ::std::string* mutable_dep_data(int index);
  void set_dep_data(int index, const ::std::string& value);
  void set_dep_data(int index, const char* value);
  void set_dep_data(int index, const void* value, size_t size);
  ::std::string* add_dep_data();
  void add_dep_data(const ::std::string& value);
  void add_dep_data(const char* value);
  void add_dep_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dep_data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dep_data();

  // required .peloton.message.Status status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // optional bytes error = 5;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  void set_error(const char* value);
  void set_error(const void* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:peloton.message.WorkResult)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_error();
  inline void clear_has_error();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dep_id_;
  mutable int _dep_id_cached_byte_size_;
  ::google::protobuf::int32 partition_id_;
  int status_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dep_data_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static WorkResult* default_instance_;
};
// -------------------------------------------------------------------

class QueryEstimate : public ::google::protobuf::Message {
 public:
  QueryEstimate();
  virtual ~QueryEstimate();

  QueryEstimate(const QueryEstimate& from);

  inline QueryEstimate& operator=(const QueryEstimate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryEstimate& default_instance();

  void Swap(QueryEstimate* other);

  // implements Message ----------------------------------------------

  inline QueryEstimate* New() const { return New(NULL); }

  QueryEstimate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryEstimate& from);
  void MergeFrom(const QueryEstimate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryEstimate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 stmt_ids = 1 [packed = true];
  int stmt_ids_size() const;
  void clear_stmt_ids();
  static const int kStmtIdsFieldNumber = 1;
  ::google::protobuf::int32 stmt_ids(int index) const;
  void set_stmt_ids(int index, ::google::protobuf::int32 value);
  void add_stmt_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stmt_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stmt_ids();

  // repeated int32 stmt_counters = 2 [packed = true];
  int stmt_counters_size() const;
  void clear_stmt_counters();
  static const int kStmtCountersFieldNumber = 2;
  ::google::protobuf::int32 stmt_counters(int index) const;
  void set_stmt_counters(int index, ::google::protobuf::int32 value);
  void add_stmt_counters(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stmt_counters() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stmt_counters();

  // optional int32 time_estimate = 3;
  bool has_time_estimate() const;
  void clear_time_estimate();
  static const int kTimeEstimateFieldNumber = 3;
  ::google::protobuf::int32 time_estimate() const;
  void set_time_estimate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:peloton.message.QueryEstimate)
 private:
  inline void set_has_time_estimate();
  inline void clear_has_time_estimate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stmt_ids_;
  mutable int _stmt_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stmt_counters_;
  mutable int _stmt_counters_cached_byte_size_;
  ::google::protobuf::int32 time_estimate_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static QueryEstimate* default_instance_;
};
// -------------------------------------------------------------------

class TransactionInitRequest : public ::google::protobuf::Message {
 public:
  TransactionInitRequest();
  virtual ~TransactionInitRequest();

  TransactionInitRequest(const TransactionInitRequest& from);

  inline TransactionInitRequest& operator=(const TransactionInitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionInitRequest& default_instance();

  void Swap(TransactionInitRequest* other);

  // implements Message ----------------------------------------------

  inline TransactionInitRequest* New() const { return New(NULL); }

  TransactionInitRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionInitRequest& from);
  void MergeFrom(const TransactionInitRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_transaction_id = 1;
  bool has_last_transaction_id() const;
  void clear_last_transaction_id();
  static const int kLastTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 last_transaction_id() const;
  void set_last_transaction_id(::google::protobuf::int64 value);

  // required int64 transaction_id = 2;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 2;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // required int32 base_partition = 3;
  bool has_base_partition() const;
  void clear_base_partition();
  static const int kBasePartitionFieldNumber = 3;
  ::google::protobuf::int32 base_partition() const;
  void set_base_partition(::google::protobuf::int32 value);

  // required int32 procedure_id = 4;
  bool has_procedure_id() const;
  void clear_procedure_id();
  static const int kProcedureIdFieldNumber = 4;
  ::google::protobuf::int32 procedure_id() const;
  void set_procedure_id(::google::protobuf::int32 value);

  // repeated int32 partitions = 5 [packed = true];
  int partitions_size() const;
  void clear_partitions();
  static const int kPartitionsFieldNumber = 5;
  ::google::protobuf::int32 partitions(int index) const;
  void set_partitions(int index, ::google::protobuf::int32 value);
  void add_partitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partitions();

  // optional bytes proc_params = 6;
  bool has_proc_params() const;
  void clear_proc_params();
  static const int kProcParamsFieldNumber = 6;
  const ::std::string& proc_params() const;
  void set_proc_params(const ::std::string& value);
  void set_proc_params(const char* value);
  void set_proc_params(const void* value, size_t size);
  ::std::string* mutable_proc_params();
  ::std::string* release_proc_params();
  void set_allocated_proc_params(::std::string* proc_params);

  // repeated .peloton.message.WorkFragment prefetch_fragments = 7;
  int prefetch_fragments_size() const;
  void clear_prefetch_fragments();
  static const int kPrefetchFragmentsFieldNumber = 7;
  const ::peloton::message::WorkFragment& prefetch_fragments(int index) const;
  ::peloton::message::WorkFragment* mutable_prefetch_fragments(int index);
  ::peloton::message::WorkFragment* add_prefetch_fragments();
  ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment >*
      mutable_prefetch_fragments();
  const ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment >&
      prefetch_fragments() const;

  // repeated bytes prefetch_params = 8;
  int prefetch_params_size() const;
  void clear_prefetch_params();
  static const int kPrefetchParamsFieldNumber = 8;
  const ::std::string& prefetch_params(int index) const;
  ::std::string* mutable_prefetch_params(int index);
  void set_prefetch_params(int index, const ::std::string& value);
  void set_prefetch_params(int index, const char* value);
  void set_prefetch_params(int index, const void* value, size_t size);
  ::std::string* add_prefetch_params();
  void add_prefetch_params(const ::std::string& value);
  void add_prefetch_params(const char* value);
  void add_prefetch_params(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& prefetch_params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_prefetch_params();

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionInitRequest)
 private:
  inline void set_has_last_transaction_id();
  inline void clear_has_last_transaction_id();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_base_partition();
  inline void clear_has_base_partition();
  inline void set_has_procedure_id();
  inline void clear_has_procedure_id();
  inline void set_has_proc_params();
  inline void clear_has_proc_params();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 last_transaction_id_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::int32 base_partition_;
  ::google::protobuf::int32 procedure_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partitions_;
  mutable int _partitions_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr proc_params_;
  ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment > prefetch_fragments_;
  ::google::protobuf::RepeatedPtrField< ::std::string> prefetch_params_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionInitRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransactionInitResponse : public ::google::protobuf::Message {
 public:
  TransactionInitResponse();
  virtual ~TransactionInitResponse();

  TransactionInitResponse(const TransactionInitResponse& from);

  inline TransactionInitResponse& operator=(const TransactionInitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionInitResponse& default_instance();

  void Swap(TransactionInitResponse* other);

  // implements Message ----------------------------------------------

  inline TransactionInitResponse* New() const { return New(NULL); }

  TransactionInitResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionInitResponse& from);
  void MergeFrom(const TransactionInitResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated int32 partitions = 2 [packed = true];
  int partitions_size() const;
  void clear_partitions();
  static const int kPartitionsFieldNumber = 2;
  ::google::protobuf::int32 partitions(int index) const;
  void set_partitions(int index, ::google::protobuf::int32 value);
  void add_partitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partitions();

  // required .peloton.message.Status status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // optional int32 reject_partition = 4;
  bool has_reject_partition() const;
  void clear_reject_partition();
  static const int kRejectPartitionFieldNumber = 4;
  ::google::protobuf::int32 reject_partition() const;
  void set_reject_partition(::google::protobuf::int32 value);

  // optional int64 reject_transaction_id = 5;
  bool has_reject_transaction_id() const;
  void clear_reject_transaction_id();
  static const int kRejectTransactionIdFieldNumber = 5;
  ::google::protobuf::int64 reject_transaction_id() const;
  void set_reject_transaction_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionInitResponse)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_reject_partition();
  inline void clear_has_reject_partition();
  inline void set_has_reject_transaction_id();
  inline void clear_has_reject_transaction_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partitions_;
  mutable int _partitions_cached_byte_size_;
  int status_;
  ::google::protobuf::int32 reject_partition_;
  ::google::protobuf::int64 reject_transaction_id_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionInitResponse* default_instance_;
};
// -------------------------------------------------------------------

class TransactionWorkRequest : public ::google::protobuf::Message {
 public:
  TransactionWorkRequest();
  virtual ~TransactionWorkRequest();

  TransactionWorkRequest(const TransactionWorkRequest& from);

  inline TransactionWorkRequest& operator=(const TransactionWorkRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionWorkRequest& default_instance();

  void Swap(TransactionWorkRequest* other);

  // implements Message ----------------------------------------------

  inline TransactionWorkRequest* New() const { return New(NULL); }

  TransactionWorkRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionWorkRequest& from);
  void MergeFrom(const TransactionWorkRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionWorkRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_transaction_id = 1;
  bool has_last_transaction_id() const;
  void clear_last_transaction_id();
  static const int kLastTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 last_transaction_id() const;
  void set_last_transaction_id(::google::protobuf::int64 value);

  // required int64 transaction_id = 2;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 2;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // required int32 source_partition = 3;
  bool has_source_partition() const;
  void clear_source_partition();
  static const int kSourcePartitionFieldNumber = 3;
  ::google::protobuf::int32 source_partition() const;
  void set_source_partition(::google::protobuf::int32 value);

  // repeated .peloton.message.WorkFragment fragments = 4;
  int fragments_size() const;
  void clear_fragments();
  static const int kFragmentsFieldNumber = 4;
  const ::peloton::message::WorkFragment& fragments(int index) const;
  ::peloton::message::WorkFragment* mutable_fragments(int index);
  ::peloton::message::WorkFragment* add_fragments();
  ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment >*
      mutable_fragments();
  const ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment >&
      fragments() const;

  // required int32 procedure_id = 5;
  bool has_procedure_id() const;
  void clear_procedure_id();
  static const int kProcedureIdFieldNumber = 5;
  ::google::protobuf::int32 procedure_id() const;
  void set_procedure_id(::google::protobuf::int32 value);

  // repeated bytes params = 6;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 6;
  const ::std::string& params(int index) const;
  ::std::string* mutable_params(int index);
  void set_params(int index, const ::std::string& value);
  void set_params(int index, const char* value);
  void set_params(int index, const void* value, size_t size);
  ::std::string* add_params();
  void add_params(const ::std::string& value);
  void add_params(const char* value);
  void add_params(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // repeated int32 attached_dep_id = 7 [packed = true];
  int attached_dep_id_size() const;
  void clear_attached_dep_id();
  static const int kAttachedDepIdFieldNumber = 7;
  ::google::protobuf::int32 attached_dep_id(int index) const;
  void set_attached_dep_id(int index, ::google::protobuf::int32 value);
  void add_attached_dep_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attached_dep_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attached_dep_id();

  // repeated bytes attached_data = 8;
  int attached_data_size() const;
  void clear_attached_data();
  static const int kAttachedDataFieldNumber = 8;
  const ::std::string& attached_data(int index) const;
  ::std::string* mutable_attached_data(int index);
  void set_attached_data(int index, const ::std::string& value);
  void set_attached_data(int index, const char* value);
  void set_attached_data(int index, const void* value, size_t size);
  ::std::string* add_attached_data();
  void add_attached_data(const ::std::string& value);
  void add_attached_data(const char* value);
  void add_attached_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& attached_data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_attached_data();

  // repeated int32 done_partition = 9 [packed = true];
  int done_partition_size() const;
  void clear_done_partition();
  static const int kDonePartitionFieldNumber = 9;
  ::google::protobuf::int32 done_partition(int index) const;
  void set_done_partition(int index, ::google::protobuf::int32 value);
  void add_done_partition(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      done_partition() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_done_partition();

  // optional bytes proc_params = 10;
  bool has_proc_params() const;
  void clear_proc_params();
  static const int kProcParamsFieldNumber = 10;
  const ::std::string& proc_params() const;
  void set_proc_params(const ::std::string& value);
  void set_proc_params(const char* value);
  void set_proc_params(const void* value, size_t size);
  ::std::string* mutable_proc_params();
  ::std::string* release_proc_params();
  void set_allocated_proc_params(::std::string* proc_params);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionWorkRequest)
 private:
  inline void set_has_last_transaction_id();
  inline void clear_has_last_transaction_id();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_source_partition();
  inline void clear_has_source_partition();
  inline void set_has_procedure_id();
  inline void clear_has_procedure_id();
  inline void set_has_proc_params();
  inline void clear_has_proc_params();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 last_transaction_id_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment > fragments_;
  ::google::protobuf::int32 source_partition_;
  ::google::protobuf::int32 procedure_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attached_dep_id_;
  mutable int _attached_dep_id_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> attached_data_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > done_partition_;
  mutable int _done_partition_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr proc_params_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionWorkRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransactionWorkResponse : public ::google::protobuf::Message {
 public:
  TransactionWorkResponse();
  virtual ~TransactionWorkResponse();

  TransactionWorkResponse(const TransactionWorkResponse& from);

  inline TransactionWorkResponse& operator=(const TransactionWorkResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionWorkResponse& default_instance();

  void Swap(TransactionWorkResponse* other);

  // implements Message ----------------------------------------------

  inline TransactionWorkResponse* New() const { return New(NULL); }

  TransactionWorkResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionWorkResponse& from);
  void MergeFrom(const TransactionWorkResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionWorkResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated .peloton.message.WorkResult results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  const ::peloton::message::WorkResult& results(int index) const;
  ::peloton::message::WorkResult* mutable_results(int index);
  ::peloton::message::WorkResult* add_results();
  ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkResult >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkResult >&
      results() const;

  // required .peloton.message.Status status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionWorkResponse)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkResult > results_;
  int status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionWorkResponse* default_instance_;
};
// -------------------------------------------------------------------

class TransactionPrefetchResult : public ::google::protobuf::Message {
 public:
  TransactionPrefetchResult();
  virtual ~TransactionPrefetchResult();

  TransactionPrefetchResult(const TransactionPrefetchResult& from);

  inline TransactionPrefetchResult& operator=(const TransactionPrefetchResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionPrefetchResult& default_instance();

  void Swap(TransactionPrefetchResult* other);

  // implements Message ----------------------------------------------

  inline TransactionPrefetchResult* New() const { return New(NULL); }

  TransactionPrefetchResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionPrefetchResult& from);
  void MergeFrom(const TransactionPrefetchResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionPrefetchResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_transaction_id = 1;
  bool has_last_transaction_id() const;
  void clear_last_transaction_id();
  static const int kLastTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 last_transaction_id() const;
  void set_last_transaction_id(::google::protobuf::int64 value);

  // required int64 transaction_id = 2;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 2;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // required int32 source_partition = 3;
  bool has_source_partition() const;
  void clear_source_partition();
  static const int kSourcePartitionFieldNumber = 3;
  ::google::protobuf::int32 source_partition() const;
  void set_source_partition(::google::protobuf::int32 value);

  // required .peloton.message.WorkResult result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  const ::peloton::message::WorkResult& result() const;
  ::peloton::message::WorkResult* mutable_result();
  ::peloton::message::WorkResult* release_result();
  void set_allocated_result(::peloton::message::WorkResult* result);

  // required .peloton.message.Status status = 5;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // repeated int32 stmt_counter = 6 [packed = true];
  int stmt_counter_size() const;
  void clear_stmt_counter();
  static const int kStmtCounterFieldNumber = 6;
  ::google::protobuf::int32 stmt_counter(int index) const;
  void set_stmt_counter(int index, ::google::protobuf::int32 value);
  void add_stmt_counter(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stmt_counter() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stmt_counter();

  // repeated int32 fragment_id = 7 [packed = true];
  int fragment_id_size() const;
  void clear_fragment_id();
  static const int kFragmentIdFieldNumber = 7;
  ::google::protobuf::int32 fragment_id(int index) const;
  void set_fragment_id(int index, ::google::protobuf::int32 value);
  void add_fragment_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fragment_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fragment_id();

  // repeated int32 param_hash = 8 [packed = true];
  int param_hash_size() const;
  void clear_param_hash();
  static const int kParamHashFieldNumber = 8;
  ::google::protobuf::int32 param_hash(int index) const;
  void set_param_hash(int index, ::google::protobuf::int32 value);
  void add_param_hash(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      param_hash() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_param_hash();

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionPrefetchResult)
 private:
  inline void set_has_last_transaction_id();
  inline void clear_has_last_transaction_id();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_source_partition();
  inline void clear_has_source_partition();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 last_transaction_id_;
  ::google::protobuf::int64 transaction_id_;
  ::peloton::message::WorkResult* result_;
  ::google::protobuf::int32 source_partition_;
  int status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stmt_counter_;
  mutable int _stmt_counter_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fragment_id_;
  mutable int _fragment_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > param_hash_;
  mutable int _param_hash_cached_byte_size_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionPrefetchResult* default_instance_;
};
// -------------------------------------------------------------------

class TransactionPrefetchAcknowledgement : public ::google::protobuf::Message {
 public:
  TransactionPrefetchAcknowledgement();
  virtual ~TransactionPrefetchAcknowledgement();

  TransactionPrefetchAcknowledgement(const TransactionPrefetchAcknowledgement& from);

  inline TransactionPrefetchAcknowledgement& operator=(const TransactionPrefetchAcknowledgement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionPrefetchAcknowledgement& default_instance();

  void Swap(TransactionPrefetchAcknowledgement* other);

  // implements Message ----------------------------------------------

  inline TransactionPrefetchAcknowledgement* New() const { return New(NULL); }

  TransactionPrefetchAcknowledgement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionPrefetchAcknowledgement& from);
  void MergeFrom(const TransactionPrefetchAcknowledgement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionPrefetchAcknowledgement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // required int32 target_partition = 2;
  bool has_target_partition() const;
  void clear_target_partition();
  static const int kTargetPartitionFieldNumber = 2;
  ::google::protobuf::int32 target_partition() const;
  void set_target_partition(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionPrefetchAcknowledgement)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_target_partition();
  inline void clear_has_target_partition();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::int32 target_partition_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionPrefetchAcknowledgement* default_instance_;
};
// -------------------------------------------------------------------

class TransactionMapRequest : public ::google::protobuf::Message {
 public:
  TransactionMapRequest();
  virtual ~TransactionMapRequest();

  TransactionMapRequest(const TransactionMapRequest& from);

  inline TransactionMapRequest& operator=(const TransactionMapRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionMapRequest& default_instance();

  void Swap(TransactionMapRequest* other);

  // implements Message ----------------------------------------------

  inline TransactionMapRequest* New() const { return New(NULL); }

  TransactionMapRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionMapRequest& from);
  void MergeFrom(const TransactionMapRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionMapRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_transaction_id = 1;
  bool has_last_transaction_id() const;
  void clear_last_transaction_id();
  static const int kLastTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 last_transaction_id() const;
  void set_last_transaction_id(::google::protobuf::int64 value);

  // required int64 transaction_id = 2;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 2;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // required int64 client_handle = 3;
  bool has_client_handle() const;
  void clear_client_handle();
  static const int kClientHandleFieldNumber = 3;
  ::google::protobuf::int64 client_handle() const;
  void set_client_handle(::google::protobuf::int64 value);

  // required int32 base_partition = 4;
  bool has_base_partition() const;
  void clear_base_partition();
  static const int kBasePartitionFieldNumber = 4;
  ::google::protobuf::int32 base_partition() const;
  void set_base_partition(::google::protobuf::int32 value);

  // required int32 procedure_id = 5;
  bool has_procedure_id() const;
  void clear_procedure_id();
  static const int kProcedureIdFieldNumber = 5;
  ::google::protobuf::int32 procedure_id() const;
  void set_procedure_id(::google::protobuf::int32 value);

  // required bytes params = 6;
  bool has_params() const;
  void clear_params();
  static const int kParamsFieldNumber = 6;
  const ::std::string& params() const;
  void set_params(const ::std::string& value);
  void set_params(const char* value);
  void set_params(const void* value, size_t size);
  ::std::string* mutable_params();
  ::std::string* release_params();
  void set_allocated_params(::std::string* params);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionMapRequest)
 private:
  inline void set_has_last_transaction_id();
  inline void clear_has_last_transaction_id();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_client_handle();
  inline void clear_has_client_handle();
  inline void set_has_base_partition();
  inline void clear_has_base_partition();
  inline void set_has_procedure_id();
  inline void clear_has_procedure_id();
  inline void set_has_params();
  inline void clear_has_params();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 last_transaction_id_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::int64 client_handle_;
  ::google::protobuf::int32 base_partition_;
  ::google::protobuf::int32 procedure_id_;
  ::google::protobuf::internal::ArenaStringPtr params_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionMapRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransactionMapResponse : public ::google::protobuf::Message {
 public:
  TransactionMapResponse();
  virtual ~TransactionMapResponse();

  TransactionMapResponse(const TransactionMapResponse& from);

  inline TransactionMapResponse& operator=(const TransactionMapResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionMapResponse& default_instance();

  void Swap(TransactionMapResponse* other);

  // implements Message ----------------------------------------------

  inline TransactionMapResponse* New() const { return New(NULL); }

  TransactionMapResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionMapResponse& from);
  void MergeFrom(const TransactionMapResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionMapResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated int32 partitions = 2 [packed = true];
  int partitions_size() const;
  void clear_partitions();
  static const int kPartitionsFieldNumber = 2;
  ::google::protobuf::int32 partitions(int index) const;
  void set_partitions(int index, ::google::protobuf::int32 value);
  void add_partitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partitions();

  // required .peloton.message.Status status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionMapResponse)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partitions_;
  mutable int _partitions_cached_byte_size_;
  int status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionMapResponse* default_instance_;
};
// -------------------------------------------------------------------

class TransactionReduceRequest : public ::google::protobuf::Message {
 public:
  TransactionReduceRequest();
  virtual ~TransactionReduceRequest();

  TransactionReduceRequest(const TransactionReduceRequest& from);

  inline TransactionReduceRequest& operator=(const TransactionReduceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionReduceRequest& default_instance();

  void Swap(TransactionReduceRequest* other);

  // implements Message ----------------------------------------------

  inline TransactionReduceRequest* New() const { return New(NULL); }

  TransactionReduceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionReduceRequest& from);
  void MergeFrom(const TransactionReduceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionReduceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionReduceRequest)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionReduceRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransactionReduceResponse_ReduceResult : public ::google::protobuf::Message {
 public:
  TransactionReduceResponse_ReduceResult();
  virtual ~TransactionReduceResponse_ReduceResult();

  TransactionReduceResponse_ReduceResult(const TransactionReduceResponse_ReduceResult& from);

  inline TransactionReduceResponse_ReduceResult& operator=(const TransactionReduceResponse_ReduceResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionReduceResponse_ReduceResult& default_instance();

  void Swap(TransactionReduceResponse_ReduceResult* other);

  // implements Message ----------------------------------------------

  inline TransactionReduceResponse_ReduceResult* New() const { return New(NULL); }

  TransactionReduceResponse_ReduceResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionReduceResponse_ReduceResult& from);
  void MergeFrom(const TransactionReduceResponse_ReduceResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionReduceResponse_ReduceResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 partition_id = 1;
  bool has_partition_id() const;
  void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  ::google::protobuf::int32 partition_id() const;
  void set_partition_id(::google::protobuf::int32 value);

  // required bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required .peloton.message.Status status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // optional bool error = 4 [default = false];
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  bool error() const;
  void set_error(bool value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionReduceResponse.ReduceResult)
 private:
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_error();
  inline void clear_has_error();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 partition_id_;
  int status_;
  bool error_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionReduceResponse_ReduceResult* default_instance_;
};
// -------------------------------------------------------------------

class TransactionReduceResponse : public ::google::protobuf::Message {
 public:
  TransactionReduceResponse();
  virtual ~TransactionReduceResponse();

  TransactionReduceResponse(const TransactionReduceResponse& from);

  inline TransactionReduceResponse& operator=(const TransactionReduceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionReduceResponse& default_instance();

  void Swap(TransactionReduceResponse* other);

  // implements Message ----------------------------------------------

  inline TransactionReduceResponse* New() const { return New(NULL); }

  TransactionReduceResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionReduceResponse& from);
  void MergeFrom(const TransactionReduceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionReduceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TransactionReduceResponse_ReduceResult ReduceResult;

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated .peloton.message.TransactionReduceResponse.ReduceResult results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  const ::peloton::message::TransactionReduceResponse_ReduceResult& results(int index) const;
  ::peloton::message::TransactionReduceResponse_ReduceResult* mutable_results(int index);
  ::peloton::message::TransactionReduceResponse_ReduceResult* add_results();
  ::google::protobuf::RepeatedPtrField< ::peloton::message::TransactionReduceResponse_ReduceResult >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::peloton::message::TransactionReduceResponse_ReduceResult >&
      results() const;

  // required .peloton.message.Status status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionReduceResponse)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedPtrField< ::peloton::message::TransactionReduceResponse_ReduceResult > results_;
  int status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionReduceResponse* default_instance_;
};
// -------------------------------------------------------------------

class TransactionPrepareRequest : public ::google::protobuf::Message {
 public:
  TransactionPrepareRequest();
  virtual ~TransactionPrepareRequest();

  TransactionPrepareRequest(const TransactionPrepareRequest& from);

  inline TransactionPrepareRequest& operator=(const TransactionPrepareRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionPrepareRequest& default_instance();

  void Swap(TransactionPrepareRequest* other);

  // implements Message ----------------------------------------------

  inline TransactionPrepareRequest* New() const { return New(NULL); }

  TransactionPrepareRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionPrepareRequest& from);
  void MergeFrom(const TransactionPrepareRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionPrepareRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated int32 partitions = 2 [packed = true];
  int partitions_size() const;
  void clear_partitions();
  static const int kPartitionsFieldNumber = 2;
  ::google::protobuf::int32 partitions(int index) const;
  void set_partitions(int index, ::google::protobuf::int32 value);
  void add_partitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partitions();

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionPrepareRequest)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partitions_;
  mutable int _partitions_cached_byte_size_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionPrepareRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransactionPrepareResponse : public ::google::protobuf::Message {
 public:
  TransactionPrepareResponse();
  virtual ~TransactionPrepareResponse();

  TransactionPrepareResponse(const TransactionPrepareResponse& from);

  inline TransactionPrepareResponse& operator=(const TransactionPrepareResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionPrepareResponse& default_instance();

  void Swap(TransactionPrepareResponse* other);

  // implements Message ----------------------------------------------

  inline TransactionPrepareResponse* New() const { return New(NULL); }

  TransactionPrepareResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionPrepareResponse& from);
  void MergeFrom(const TransactionPrepareResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionPrepareResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated int32 partitions = 2 [packed = true];
  int partitions_size() const;
  void clear_partitions();
  static const int kPartitionsFieldNumber = 2;
  ::google::protobuf::int32 partitions(int index) const;
  void set_partitions(int index, ::google::protobuf::int32 value);
  void add_partitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partitions();

  // required .peloton.message.Status status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionPrepareResponse)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partitions_;
  mutable int _partitions_cached_byte_size_;
  int status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionPrepareResponse* default_instance_;
};
// -------------------------------------------------------------------

class TransactionFinishRequest : public ::google::protobuf::Message {
 public:
  TransactionFinishRequest();
  virtual ~TransactionFinishRequest();

  TransactionFinishRequest(const TransactionFinishRequest& from);

  inline TransactionFinishRequest& operator=(const TransactionFinishRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionFinishRequest& default_instance();

  void Swap(TransactionFinishRequest* other);

  // implements Message ----------------------------------------------

  inline TransactionFinishRequest* New() const { return New(NULL); }

  TransactionFinishRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionFinishRequest& from);
  void MergeFrom(const TransactionFinishRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionFinishRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated int32 partitions = 2 [packed = true];
  int partitions_size() const;
  void clear_partitions();
  static const int kPartitionsFieldNumber = 2;
  ::google::protobuf::int32 partitions(int index) const;
  void set_partitions(int index, ::google::protobuf::int32 value);
  void add_partitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partitions();

  // required .peloton.message.Status status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionFinishRequest)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partitions_;
  mutable int _partitions_cached_byte_size_;
  int status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionFinishRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransactionFinishResponse : public ::google::protobuf::Message {
 public:
  TransactionFinishResponse();
  virtual ~TransactionFinishResponse();

  TransactionFinishResponse(const TransactionFinishResponse& from);

  inline TransactionFinishResponse& operator=(const TransactionFinishResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionFinishResponse& default_instance();

  void Swap(TransactionFinishResponse* other);

  // implements Message ----------------------------------------------

  inline TransactionFinishResponse* New() const { return New(NULL); }

  TransactionFinishResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionFinishResponse& from);
  void MergeFrom(const TransactionFinishResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionFinishResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated int32 partitions = 2 [packed = true];
  int partitions_size() const;
  void clear_partitions();
  static const int kPartitionsFieldNumber = 2;
  ::google::protobuf::int32 partitions(int index) const;
  void set_partitions(int index, ::google::protobuf::int32 value);
  void add_partitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partitions();

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionFinishResponse)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partitions_;
  mutable int _partitions_cached_byte_size_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionFinishResponse* default_instance_;
};
// -------------------------------------------------------------------

class TransactionRedirectRequest : public ::google::protobuf::Message {
 public:
  TransactionRedirectRequest();
  virtual ~TransactionRedirectRequest();

  TransactionRedirectRequest(const TransactionRedirectRequest& from);

  inline TransactionRedirectRequest& operator=(const TransactionRedirectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionRedirectRequest& default_instance();

  void Swap(TransactionRedirectRequest* other);

  // implements Message ----------------------------------------------

  inline TransactionRedirectRequest* New() const { return New(NULL); }

  TransactionRedirectRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionRedirectRequest& from);
  void MergeFrom(const TransactionRedirectRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionRedirectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required bytes work = 2;
  bool has_work() const;
  void clear_work();
  static const int kWorkFieldNumber = 2;
  const ::std::string& work() const;
  void set_work(const ::std::string& value);
  void set_work(const char* value);
  void set_work(const void* value, size_t size);
  ::std::string* mutable_work();
  ::std::string* release_work();
  void set_allocated_work(::std::string* work);

  // optional int64 orig_txn_id = 3;
  bool has_orig_txn_id() const;
  void clear_orig_txn_id();
  static const int kOrigTxnIdFieldNumber = 3;
  ::google::protobuf::int64 orig_txn_id() const;
  void set_orig_txn_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionRedirectRequest)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_work();
  inline void clear_has_work();
  inline void set_has_orig_txn_id();
  inline void clear_has_orig_txn_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr work_;
  ::google::protobuf::int64 orig_txn_id_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionRedirectRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransactionRedirectResponse : public ::google::protobuf::Message {
 public:
  TransactionRedirectResponse();
  virtual ~TransactionRedirectResponse();

  TransactionRedirectResponse(const TransactionRedirectResponse& from);

  inline TransactionRedirectResponse& operator=(const TransactionRedirectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionRedirectResponse& default_instance();

  void Swap(TransactionRedirectResponse* other);

  // implements Message ----------------------------------------------

  inline TransactionRedirectResponse* New() const { return New(NULL); }

  TransactionRedirectResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionRedirectResponse& from);
  void MergeFrom(const TransactionRedirectResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionRedirectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required bytes output = 2;
  bool has_output() const;
  void clear_output();
  static const int kOutputFieldNumber = 2;
  const ::std::string& output() const;
  void set_output(const ::std::string& value);
  void set_output(const char* value);
  void set_output(const void* value, size_t size);
  ::std::string* mutable_output();
  ::std::string* release_output();
  void set_allocated_output(::std::string* output);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionRedirectResponse)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_output();
  inline void clear_has_output();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr output_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionRedirectResponse* default_instance_;
};
// -------------------------------------------------------------------

class TransactionDebugRequest : public ::google::protobuf::Message {
 public:
  TransactionDebugRequest();
  virtual ~TransactionDebugRequest();

  TransactionDebugRequest(const TransactionDebugRequest& from);

  inline TransactionDebugRequest& operator=(const TransactionDebugRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionDebugRequest& default_instance();

  void Swap(TransactionDebugRequest* other);

  // implements Message ----------------------------------------------

  inline TransactionDebugRequest* New() const { return New(NULL); }

  TransactionDebugRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionDebugRequest& from);
  void MergeFrom(const TransactionDebugRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionDebugRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required int64 transaction_id = 2;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 2;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionDebugRequest)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionDebugRequest* default_instance_;
};
// -------------------------------------------------------------------

class TransactionDebugResponse : public ::google::protobuf::Message {
 public:
  TransactionDebugResponse();
  virtual ~TransactionDebugResponse();

  TransactionDebugResponse(const TransactionDebugResponse& from);

  inline TransactionDebugResponse& operator=(const TransactionDebugResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionDebugResponse& default_instance();

  void Swap(TransactionDebugResponse* other);

  // implements Message ----------------------------------------------

  inline TransactionDebugResponse* New() const { return New(NULL); }

  TransactionDebugResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransactionDebugResponse& from);
  void MergeFrom(const TransactionDebugResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransactionDebugResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required .peloton.message.Status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // required string debug = 3;
  bool has_debug() const;
  void clear_debug();
  static const int kDebugFieldNumber = 3;
  const ::std::string& debug() const;
  void set_debug(const ::std::string& value);
  void set_debug(const char* value);
  void set_debug(const char* value, size_t size);
  ::std::string* mutable_debug();
  ::std::string* release_debug();
  void set_allocated_debug(::std::string* debug);

  // @@protoc_insertion_point(class_scope:peloton.message.TransactionDebugResponse)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_debug();
  inline void clear_has_debug();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sender_site_;
  int status_;
  ::google::protobuf::internal::ArenaStringPtr debug_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TransactionDebugResponse* default_instance_;
};
// -------------------------------------------------------------------

class SendDataRequest : public ::google::protobuf::Message {
 public:
  SendDataRequest();
  virtual ~SendDataRequest();

  SendDataRequest(const SendDataRequest& from);

  inline SendDataRequest& operator=(const SendDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendDataRequest& default_instance();

  void Swap(SendDataRequest* other);

  // implements Message ----------------------------------------------

  inline SendDataRequest* New() const { return New(NULL); }

  SendDataRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendDataRequest& from);
  void MergeFrom(const SendDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // required int32 sender_site = 2;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 2;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // repeated int32 dep_id = 3 [packed = true];
  int dep_id_size() const;
  void clear_dep_id();
  static const int kDepIdFieldNumber = 3;
  ::google::protobuf::int32 dep_id(int index) const;
  void set_dep_id(int index, ::google::protobuf::int32 value);
  void add_dep_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dep_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dep_id();

  // repeated bytes data = 4;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data(int index) const;
  ::std::string* mutable_data(int index);
  void set_data(int index, const ::std::string& value);
  void set_data(int index, const char* value);
  void set_data(int index, const void* value, size_t size);
  ::std::string* add_data();
  void add_data(const ::std::string& value);
  void add_data(const char* value);
  void add_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data();

  // @@protoc_insertion_point(class_scope:peloton.message.SendDataRequest)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_sender_site();
  inline void clear_has_sender_site();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dep_id_;
  mutable int _dep_id_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> data_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SendDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class SendDataResponse : public ::google::protobuf::Message {
 public:
  SendDataResponse();
  virtual ~SendDataResponse();

  SendDataResponse(const SendDataResponse& from);

  inline SendDataResponse& operator=(const SendDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendDataResponse& default_instance();

  void Swap(SendDataResponse* other);

  // implements Message ----------------------------------------------

  inline SendDataResponse* New() const { return New(NULL); }

  SendDataResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendDataResponse& from);
  void MergeFrom(const SendDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 transaction_id = 1;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 1;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // repeated int32 partitions = 2 [packed = true];
  int partitions_size() const;
  void clear_partitions();
  static const int kPartitionsFieldNumber = 2;
  ::google::protobuf::int32 partitions(int index) const;
  void set_partitions(int index, ::google::protobuf::int32 value);
  void add_partitions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partitions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partitions();

  // required int32 sender_site = 3;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 3;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required .peloton.message.Status status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // @@protoc_insertion_point(class_scope:peloton.message.SendDataResponse)
 private:
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partitions_;
  mutable int _partitions_cached_byte_size_;
  ::google::protobuf::int32 sender_site_;
  int status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SendDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class InitializeRequest : public ::google::protobuf::Message {
 public:
  InitializeRequest();
  virtual ~InitializeRequest();

  InitializeRequest(const InitializeRequest& from);

  inline InitializeRequest& operator=(const InitializeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitializeRequest& default_instance();

  void Swap(InitializeRequest* other);

  // implements Message ----------------------------------------------

  inline InitializeRequest* New() const { return New(NULL); }

  InitializeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitializeRequest& from);
  void MergeFrom(const InitializeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitializeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required int64 instance_id = 2;
  bool has_instance_id() const;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 2;
  ::google::protobuf::int64 instance_id() const;
  void set_instance_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.InitializeRequest)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_instance_id();
  inline void clear_has_instance_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 instance_id_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static InitializeRequest* default_instance_;
};
// -------------------------------------------------------------------

class InitializeResponse : public ::google::protobuf::Message {
 public:
  InitializeResponse();
  virtual ~InitializeResponse();

  InitializeResponse(const InitializeResponse& from);

  inline InitializeResponse& operator=(const InitializeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitializeResponse& default_instance();

  void Swap(InitializeResponse* other);

  // implements Message ----------------------------------------------

  inline InitializeResponse* New() const { return New(NULL); }

  InitializeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitializeResponse& from);
  void MergeFrom(const InitializeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InitializeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required .peloton.message.Status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // @@protoc_insertion_point(class_scope:peloton.message.InitializeResponse)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sender_site_;
  int status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static InitializeResponse* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownPrepareRequest : public ::google::protobuf::Message {
 public:
  ShutdownPrepareRequest();
  virtual ~ShutdownPrepareRequest();

  ShutdownPrepareRequest(const ShutdownPrepareRequest& from);

  inline ShutdownPrepareRequest& operator=(const ShutdownPrepareRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownPrepareRequest& default_instance();

  void Swap(ShutdownPrepareRequest* other);

  // implements Message ----------------------------------------------

  inline ShutdownPrepareRequest* New() const { return New(NULL); }

  ShutdownPrepareRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownPrepareRequest& from);
  void MergeFrom(const ShutdownPrepareRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShutdownPrepareRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // optional bytes error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  void set_error(const char* value);
  void set_error(const void* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:peloton.message.ShutdownPrepareRequest)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ShutdownPrepareRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownPrepareResponse : public ::google::protobuf::Message {
 public:
  ShutdownPrepareResponse();
  virtual ~ShutdownPrepareResponse();

  ShutdownPrepareResponse(const ShutdownPrepareResponse& from);

  inline ShutdownPrepareResponse& operator=(const ShutdownPrepareResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownPrepareResponse& default_instance();

  void Swap(ShutdownPrepareResponse* other);

  // implements Message ----------------------------------------------

  inline ShutdownPrepareResponse* New() const { return New(NULL); }

  ShutdownPrepareResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownPrepareResponse& from);
  void MergeFrom(const ShutdownPrepareResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShutdownPrepareResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:peloton.message.ShutdownPrepareResponse)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ShutdownPrepareResponse* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownRequest : public ::google::protobuf::Message {
 public:
  ShutdownRequest();
  virtual ~ShutdownRequest();

  ShutdownRequest(const ShutdownRequest& from);

  inline ShutdownRequest& operator=(const ShutdownRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownRequest& default_instance();

  void Swap(ShutdownRequest* other);

  // implements Message ----------------------------------------------

  inline ShutdownRequest* New() const { return New(NULL); }

  ShutdownRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownRequest& from);
  void MergeFrom(const ShutdownRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShutdownRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required int32 exit_status = 2;
  bool has_exit_status() const;
  void clear_exit_status();
  static const int kExitStatusFieldNumber = 2;
  ::google::protobuf::int32 exit_status() const;
  void set_exit_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:peloton.message.ShutdownRequest)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_exit_status();
  inline void clear_has_exit_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sender_site_;
  ::google::protobuf::int32 exit_status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ShutdownRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownResponse : public ::google::protobuf::Message {
 public:
  ShutdownResponse();
  virtual ~ShutdownResponse();

  ShutdownResponse(const ShutdownResponse& from);

  inline ShutdownResponse& operator=(const ShutdownResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownResponse& default_instance();

  void Swap(ShutdownResponse* other);

  // implements Message ----------------------------------------------

  inline ShutdownResponse* New() const { return New(NULL); }

  ShutdownResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownResponse& from);
  void MergeFrom(const ShutdownResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShutdownResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:peloton.message.ShutdownResponse)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ShutdownResponse* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatRequest : public ::google::protobuf::Message {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequest& default_instance();

  void Swap(HeartbeatRequest* other);

  // implements Message ----------------------------------------------

  inline HeartbeatRequest* New() const { return New(NULL); }

  HeartbeatRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required int64 last_transaction_id = 2;
  bool has_last_transaction_id() const;
  void clear_last_transaction_id();
  static const int kLastTransactionIdFieldNumber = 2;
  ::google::protobuf::int64 last_transaction_id() const;
  void set_last_transaction_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.HeartbeatRequest)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_last_transaction_id();
  inline void clear_has_last_transaction_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 last_transaction_id_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatResponse : public ::google::protobuf::Message {
 public:
  HeartbeatResponse();
  virtual ~HeartbeatResponse();

  HeartbeatResponse(const HeartbeatResponse& from);

  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatResponse& default_instance();

  void Swap(HeartbeatResponse* other);

  // implements Message ----------------------------------------------

  inline HeartbeatResponse* New() const { return New(NULL); }

  HeartbeatResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatResponse& from);
  void MergeFrom(const HeartbeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required .peloton.message.Status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // @@protoc_insertion_point(class_scope:peloton.message.HeartbeatResponse)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_status();
  inline void clear_has_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sender_site_;
  int status_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatResponse* default_instance_;
};
// -------------------------------------------------------------------

class UnevictDataRequest : public ::google::protobuf::Message {
 public:
  UnevictDataRequest();
  virtual ~UnevictDataRequest();

  UnevictDataRequest(const UnevictDataRequest& from);

  inline UnevictDataRequest& operator=(const UnevictDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnevictDataRequest& default_instance();

  void Swap(UnevictDataRequest* other);

  // implements Message ----------------------------------------------

  inline UnevictDataRequest* New() const { return New(NULL); }

  UnevictDataRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnevictDataRequest& from);
  void MergeFrom(const UnevictDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnevictDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required int64 transaction_id = 2;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 2;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // required int32 partition_id = 3;
  bool has_partition_id() const;
  void clear_partition_id();
  static const int kPartitionIdFieldNumber = 3;
  ::google::protobuf::int32 partition_id() const;
  void set_partition_id(::google::protobuf::int32 value);

  // required int32 table_id = 4;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 4;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // repeated int32 block_ids = 5 [packed = true];
  int block_ids_size() const;
  void clear_block_ids();
  static const int kBlockIdsFieldNumber = 5;
  ::google::protobuf::int32 block_ids(int index) const;
  void set_block_ids(int index, ::google::protobuf::int32 value);
  void add_block_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      block_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_block_ids();

  // repeated int32 tuple_offsets = 6 [packed = true];
  int tuple_offsets_size() const;
  void clear_tuple_offsets();
  static const int kTupleOffsetsFieldNumber = 6;
  ::google::protobuf::int32 tuple_offsets(int index) const;
  void set_tuple_offsets(int index, ::google::protobuf::int32 value);
  void add_tuple_offsets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tuple_offsets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tuple_offsets();

  // required int64 new_transaction_id = 7;
  bool has_new_transaction_id() const;
  void clear_new_transaction_id();
  static const int kNewTransactionIdFieldNumber = 7;
  ::google::protobuf::int64 new_transaction_id() const;
  void set_new_transaction_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.UnevictDataRequest)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_partition_id();
  inline void clear_has_partition_id();
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_new_transaction_id();
  inline void clear_has_new_transaction_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::int32 sender_site_;
  ::google::protobuf::int32 partition_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > block_ids_;
  mutable int _block_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tuple_offsets_;
  mutable int _tuple_offsets_cached_byte_size_;
  ::google::protobuf::int64 new_transaction_id_;
  ::google::protobuf::int32 table_id_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UnevictDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnevictDataResponse : public ::google::protobuf::Message {
 public:
  UnevictDataResponse();
  virtual ~UnevictDataResponse();

  UnevictDataResponse(const UnevictDataResponse& from);

  inline UnevictDataResponse& operator=(const UnevictDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnevictDataResponse& default_instance();

  void Swap(UnevictDataResponse* other);

  // implements Message ----------------------------------------------

  inline UnevictDataResponse* New() const { return New(NULL); }

  UnevictDataResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnevictDataResponse& from);
  void MergeFrom(const UnevictDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnevictDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required .peloton.message.Status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::peloton::message::Status status() const;
  void set_status(::peloton::message::Status value);

  // required int64 transaction_id = 3;
  bool has_transaction_id() const;
  void clear_transaction_id();
  static const int kTransactionIdFieldNumber = 3;
  ::google::protobuf::int64 transaction_id() const;
  void set_transaction_id(::google::protobuf::int64 value);

  // required int32 partition_id = 4;
  bool has_partition_id() const;
  void clear_partition_id();
  static const int kPartitionIdFieldNumber = 4;
  ::google::protobuf::int32 partition_id() const;
  void set_partition_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:peloton.message.UnevictDataResponse)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_transaction_id();
  inline void clear_has_transaction_id();
  inline void set_has_partition_id();
  inline void clear_has_partition_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sender_site_;
  int status_;
  ::google::protobuf::int64 transaction_id_;
  ::google::protobuf::int32 partition_id_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UnevictDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class TimeSyncRequest : public ::google::protobuf::Message {
 public:
  TimeSyncRequest();
  virtual ~TimeSyncRequest();

  TimeSyncRequest(const TimeSyncRequest& from);

  inline TimeSyncRequest& operator=(const TimeSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeSyncRequest& default_instance();

  void Swap(TimeSyncRequest* other);

  // implements Message ----------------------------------------------

  inline TimeSyncRequest* New() const { return New(NULL); }

  TimeSyncRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeSyncRequest& from);
  void MergeFrom(const TimeSyncRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TimeSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required int64 t0_s = 2;
  bool has_t0_s() const;
  void clear_t0_s();
  static const int kT0SFieldNumber = 2;
  ::google::protobuf::int64 t0_s() const;
  void set_t0_s(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.TimeSyncRequest)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_t0_s();
  inline void clear_has_t0_s();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 t0_s_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TimeSyncRequest* default_instance_;
};
// -------------------------------------------------------------------

class TimeSyncResponse : public ::google::protobuf::Message {
 public:
  TimeSyncResponse();
  virtual ~TimeSyncResponse();

  TimeSyncResponse(const TimeSyncResponse& from);

  inline TimeSyncResponse& operator=(const TimeSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeSyncResponse& default_instance();

  void Swap(TimeSyncResponse* other);

  // implements Message ----------------------------------------------

  inline TimeSyncResponse* New() const { return New(NULL); }

  TimeSyncResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeSyncResponse& from);
  void MergeFrom(const TimeSyncResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TimeSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sender_site = 1;
  bool has_sender_site() const;
  void clear_sender_site();
  static const int kSenderSiteFieldNumber = 1;
  ::google::protobuf::int32 sender_site() const;
  void set_sender_site(::google::protobuf::int32 value);

  // required int64 t0_s = 2;
  bool has_t0_s() const;
  void clear_t0_s();
  static const int kT0SFieldNumber = 2;
  ::google::protobuf::int64 t0_s() const;
  void set_t0_s(::google::protobuf::int64 value);

  // required int64 t0_r = 3;
  bool has_t0_r() const;
  void clear_t0_r();
  static const int kT0RFieldNumber = 3;
  ::google::protobuf::int64 t0_r() const;
  void set_t0_r(::google::protobuf::int64 value);

  // required int64 t1_s = 4;
  bool has_t1_s() const;
  void clear_t1_s();
  static const int kT1SFieldNumber = 4;
  ::google::protobuf::int64 t1_s() const;
  void set_t1_s(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:peloton.message.TimeSyncResponse)
 private:
  inline void set_has_sender_site();
  inline void clear_has_sender_site();
  inline void set_has_t0_s();
  inline void clear_has_t0_s();
  inline void set_has_t0_r();
  inline void clear_has_t0_r();
  inline void set_has_t1_s();
  inline void clear_has_t1_s();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 t0_s_;
  ::google::protobuf::int64 t0_r_;
  ::google::protobuf::int64 t1_s_;
  ::google::protobuf::int32 sender_site_;
  friend void  protobuf_AddDesc_abstract_5fservice_2eproto();
  friend void protobuf_AssignDesc_abstract_5fservice_2eproto();
  friend void protobuf_ShutdownFile_abstract_5fservice_2eproto();

  void InitAsDefaultInstance();
  static TimeSyncResponse* default_instance_;
};
// ===================================================================

class AbstractPelotonService_Stub;

class AbstractPelotonService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline AbstractPelotonService() {};
 public:
  virtual ~AbstractPelotonService();

  typedef AbstractPelotonService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void TransactionInit(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionInitRequest* request,
                       ::peloton::message::TransactionInitResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void TransactionWork(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionWorkRequest* request,
                       ::peloton::message::TransactionWorkResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void TransactionPrefetch(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionPrefetchResult* request,
                       ::peloton::message::TransactionPrefetchAcknowledgement* response,
                       ::google::protobuf::Closure* done);
  virtual void TransactionMap(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionMapRequest* request,
                       ::peloton::message::TransactionMapResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void TransactionReduce(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionReduceRequest* request,
                       ::peloton::message::TransactionReduceResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void TransactionPrepare(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionPrepareRequest* request,
                       ::peloton::message::TransactionPrepareResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void TransactionFinish(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionFinishRequest* request,
                       ::peloton::message::TransactionFinishResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void TransactionRedirect(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionRedirectRequest* request,
                       ::peloton::message::TransactionRedirectResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void TransactionDebug(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionDebugRequest* request,
                       ::peloton::message::TransactionDebugResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SendData(::google::protobuf::RpcController* controller,
                       const ::peloton::message::SendDataRequest* request,
                       ::peloton::message::SendDataResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Initialize(::google::protobuf::RpcController* controller,
                       const ::peloton::message::InitializeRequest* request,
                       ::peloton::message::InitializeResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ShutdownPrepare(::google::protobuf::RpcController* controller,
                       const ::peloton::message::ShutdownPrepareRequest* request,
                       ::peloton::message::ShutdownPrepareResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Shutdown(::google::protobuf::RpcController* controller,
                       const ::peloton::message::ShutdownRequest* request,
                       ::peloton::message::ShutdownResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Heartbeat(::google::protobuf::RpcController* controller,
                       const ::peloton::message::HeartbeatRequest* request,
                       ::peloton::message::HeartbeatResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void UnevictData(::google::protobuf::RpcController* controller,
                       const ::peloton::message::UnevictDataRequest* request,
                       ::peloton::message::UnevictDataResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void TimeSync(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TimeSyncRequest* request,
                       ::peloton::message::TimeSyncResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(AbstractPelotonService);
};

class AbstractPelotonService_Stub : public AbstractPelotonService {
 public:
  AbstractPelotonService_Stub(::google::protobuf::RpcChannel* channel);
  AbstractPelotonService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~AbstractPelotonService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements AbstractPelotonService ------------------------------------------

  void TransactionInit(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionInitRequest* request,
                       ::peloton::message::TransactionInitResponse* response,
                       ::google::protobuf::Closure* done);
  void TransactionWork(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionWorkRequest* request,
                       ::peloton::message::TransactionWorkResponse* response,
                       ::google::protobuf::Closure* done);
  void TransactionPrefetch(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionPrefetchResult* request,
                       ::peloton::message::TransactionPrefetchAcknowledgement* response,
                       ::google::protobuf::Closure* done);
  void TransactionMap(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionMapRequest* request,
                       ::peloton::message::TransactionMapResponse* response,
                       ::google::protobuf::Closure* done);
  void TransactionReduce(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionReduceRequest* request,
                       ::peloton::message::TransactionReduceResponse* response,
                       ::google::protobuf::Closure* done);
  void TransactionPrepare(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionPrepareRequest* request,
                       ::peloton::message::TransactionPrepareResponse* response,
                       ::google::protobuf::Closure* done);
  void TransactionFinish(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionFinishRequest* request,
                       ::peloton::message::TransactionFinishResponse* response,
                       ::google::protobuf::Closure* done);
  void TransactionRedirect(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionRedirectRequest* request,
                       ::peloton::message::TransactionRedirectResponse* response,
                       ::google::protobuf::Closure* done);
  void TransactionDebug(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TransactionDebugRequest* request,
                       ::peloton::message::TransactionDebugResponse* response,
                       ::google::protobuf::Closure* done);
  void SendData(::google::protobuf::RpcController* controller,
                       const ::peloton::message::SendDataRequest* request,
                       ::peloton::message::SendDataResponse* response,
                       ::google::protobuf::Closure* done);
  void Initialize(::google::protobuf::RpcController* controller,
                       const ::peloton::message::InitializeRequest* request,
                       ::peloton::message::InitializeResponse* response,
                       ::google::protobuf::Closure* done);
  void ShutdownPrepare(::google::protobuf::RpcController* controller,
                       const ::peloton::message::ShutdownPrepareRequest* request,
                       ::peloton::message::ShutdownPrepareResponse* response,
                       ::google::protobuf::Closure* done);
  void Shutdown(::google::protobuf::RpcController* controller,
                       const ::peloton::message::ShutdownRequest* request,
                       ::peloton::message::ShutdownResponse* response,
                       ::google::protobuf::Closure* done);
  void Heartbeat(::google::protobuf::RpcController* controller,
                       const ::peloton::message::HeartbeatRequest* request,
                       ::peloton::message::HeartbeatResponse* response,
                       ::google::protobuf::Closure* done);
  void UnevictData(::google::protobuf::RpcController* controller,
                       const ::peloton::message::UnevictDataRequest* request,
                       ::peloton::message::UnevictDataResponse* response,
                       ::google::protobuf::Closure* done);
  void TimeSync(::google::protobuf::RpcController* controller,
                       const ::peloton::message::TimeSyncRequest* request,
                       ::peloton::message::TimeSyncResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(AbstractPelotonService_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WorkFragment

// required int32 partition_id = 1;
inline bool WorkFragment::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkFragment::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkFragment::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkFragment::clear_partition_id() {
  partition_id_ = 0;
  clear_has_partition_id();
}
inline ::google::protobuf::int32 WorkFragment::partition_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.partition_id)
  return partition_id_;
}
inline void WorkFragment::set_partition_id(::google::protobuf::int32 value) {
  set_has_partition_id();
  partition_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.partition_id)
}

// repeated int32 fragment_id = 2 [packed = true];
inline int WorkFragment::fragment_id_size() const {
  return fragment_id_.size();
}
inline void WorkFragment::clear_fragment_id() {
  fragment_id_.Clear();
}
inline ::google::protobuf::int32 WorkFragment::fragment_id(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.fragment_id)
  return fragment_id_.Get(index);
}
inline void WorkFragment::set_fragment_id(int index, ::google::protobuf::int32 value) {
  fragment_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.fragment_id)
}
inline void WorkFragment::add_fragment_id(::google::protobuf::int32 value) {
  fragment_id_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkFragment.fragment_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkFragment::fragment_id() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkFragment.fragment_id)
  return fragment_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkFragment::mutable_fragment_id() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkFragment.fragment_id)
  return &fragment_id_;
}

// repeated int32 input_dep_id = 3 [packed = true];
inline int WorkFragment::input_dep_id_size() const {
  return input_dep_id_.size();
}
inline void WorkFragment::clear_input_dep_id() {
  input_dep_id_.Clear();
}
inline ::google::protobuf::int32 WorkFragment::input_dep_id(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.input_dep_id)
  return input_dep_id_.Get(index);
}
inline void WorkFragment::set_input_dep_id(int index, ::google::protobuf::int32 value) {
  input_dep_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.input_dep_id)
}
inline void WorkFragment::add_input_dep_id(::google::protobuf::int32 value) {
  input_dep_id_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkFragment.input_dep_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkFragment::input_dep_id() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkFragment.input_dep_id)
  return input_dep_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkFragment::mutable_input_dep_id() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkFragment.input_dep_id)
  return &input_dep_id_;
}

// repeated int32 output_dep_id = 4 [packed = true];
inline int WorkFragment::output_dep_id_size() const {
  return output_dep_id_.size();
}
inline void WorkFragment::clear_output_dep_id() {
  output_dep_id_.Clear();
}
inline ::google::protobuf::int32 WorkFragment::output_dep_id(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.output_dep_id)
  return output_dep_id_.Get(index);
}
inline void WorkFragment::set_output_dep_id(int index, ::google::protobuf::int32 value) {
  output_dep_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.output_dep_id)
}
inline void WorkFragment::add_output_dep_id(::google::protobuf::int32 value) {
  output_dep_id_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkFragment.output_dep_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkFragment::output_dep_id() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkFragment.output_dep_id)
  return output_dep_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkFragment::mutable_output_dep_id() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkFragment.output_dep_id)
  return &output_dep_id_;
}

// repeated int32 param_index = 5 [packed = true];
inline int WorkFragment::param_index_size() const {
  return param_index_.size();
}
inline void WorkFragment::clear_param_index() {
  param_index_.Clear();
}
inline ::google::protobuf::int32 WorkFragment::param_index(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.param_index)
  return param_index_.Get(index);
}
inline void WorkFragment::set_param_index(int index, ::google::protobuf::int32 value) {
  param_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.param_index)
}
inline void WorkFragment::add_param_index(::google::protobuf::int32 value) {
  param_index_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkFragment.param_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkFragment::param_index() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkFragment.param_index)
  return param_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkFragment::mutable_param_index() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkFragment.param_index)
  return &param_index_;
}

// repeated int32 stmt_counter = 6 [packed = true];
inline int WorkFragment::stmt_counter_size() const {
  return stmt_counter_.size();
}
inline void WorkFragment::clear_stmt_counter() {
  stmt_counter_.Clear();
}
inline ::google::protobuf::int32 WorkFragment::stmt_counter(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.stmt_counter)
  return stmt_counter_.Get(index);
}
inline void WorkFragment::set_stmt_counter(int index, ::google::protobuf::int32 value) {
  stmt_counter_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.stmt_counter)
}
inline void WorkFragment::add_stmt_counter(::google::protobuf::int32 value) {
  stmt_counter_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkFragment.stmt_counter)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkFragment::stmt_counter() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkFragment.stmt_counter)
  return stmt_counter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkFragment::mutable_stmt_counter() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkFragment.stmt_counter)
  return &stmt_counter_;
}

// repeated int32 stmt_index = 7 [packed = true];
inline int WorkFragment::stmt_index_size() const {
  return stmt_index_.size();
}
inline void WorkFragment::clear_stmt_index() {
  stmt_index_.Clear();
}
inline ::google::protobuf::int32 WorkFragment::stmt_index(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.stmt_index)
  return stmt_index_.Get(index);
}
inline void WorkFragment::set_stmt_index(int index, ::google::protobuf::int32 value) {
  stmt_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.stmt_index)
}
inline void WorkFragment::add_stmt_index(::google::protobuf::int32 value) {
  stmt_index_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkFragment.stmt_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkFragment::stmt_index() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkFragment.stmt_index)
  return stmt_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkFragment::mutable_stmt_index() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkFragment.stmt_index)
  return &stmt_index_;
}

// repeated bool stmt_ignore = 8 [packed = true];
inline int WorkFragment::stmt_ignore_size() const {
  return stmt_ignore_.size();
}
inline void WorkFragment::clear_stmt_ignore() {
  stmt_ignore_.Clear();
}
inline bool WorkFragment::stmt_ignore(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.stmt_ignore)
  return stmt_ignore_.Get(index);
}
inline void WorkFragment::set_stmt_ignore(int index, bool value) {
  stmt_ignore_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.stmt_ignore)
}
inline void WorkFragment::add_stmt_ignore(bool value) {
  stmt_ignore_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkFragment.stmt_ignore)
}
inline const ::google::protobuf::RepeatedField< bool >&
WorkFragment::stmt_ignore() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkFragment.stmt_ignore)
  return stmt_ignore_;
}
inline ::google::protobuf::RepeatedField< bool >*
WorkFragment::mutable_stmt_ignore() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkFragment.stmt_ignore)
  return &stmt_ignore_;
}

// required bool read_only = 9;
inline bool WorkFragment::has_read_only() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WorkFragment::set_has_read_only() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WorkFragment::clear_has_read_only() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WorkFragment::clear_read_only() {
  read_only_ = false;
  clear_has_read_only();
}
inline bool WorkFragment::read_only() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.read_only)
  return read_only_;
}
inline void WorkFragment::set_read_only(bool value) {
  set_has_read_only();
  read_only_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.read_only)
}

// optional bool needs_input = 10 [default = false];
inline bool WorkFragment::has_needs_input() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WorkFragment::set_has_needs_input() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WorkFragment::clear_has_needs_input() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WorkFragment::clear_needs_input() {
  needs_input_ = false;
  clear_has_needs_input();
}
inline bool WorkFragment::needs_input() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.needs_input)
  return needs_input_;
}
inline void WorkFragment::set_needs_input(bool value) {
  set_has_needs_input();
  needs_input_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.needs_input)
}

// optional bool last_fragment = 11 [default = false];
inline bool WorkFragment::has_last_fragment() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WorkFragment::set_has_last_fragment() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WorkFragment::clear_has_last_fragment() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WorkFragment::clear_last_fragment() {
  last_fragment_ = false;
  clear_has_last_fragment();
}
inline bool WorkFragment::last_fragment() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.last_fragment)
  return last_fragment_;
}
inline void WorkFragment::set_last_fragment(bool value) {
  set_has_last_fragment();
  last_fragment_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.last_fragment)
}

// optional bool prefetch = 12 [default = false];
inline bool WorkFragment::has_prefetch() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WorkFragment::set_has_prefetch() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WorkFragment::clear_has_prefetch() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WorkFragment::clear_prefetch() {
  prefetch_ = false;
  clear_has_prefetch();
}
inline bool WorkFragment::prefetch() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.prefetch)
  return prefetch_;
}
inline void WorkFragment::set_prefetch(bool value) {
  set_has_prefetch();
  prefetch_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.prefetch)
}

// optional bool force = 13 [default = false];
inline bool WorkFragment::has_force() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void WorkFragment::set_has_force() {
  _has_bits_[0] |= 0x00001000u;
}
inline void WorkFragment::clear_has_force() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void WorkFragment::clear_force() {
  force_ = false;
  clear_has_force();
}
inline bool WorkFragment::force() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkFragment.force)
  return force_;
}
inline void WorkFragment::set_force(bool value) {
  set_has_force();
  force_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.WorkFragment.force)
}

// -------------------------------------------------------------------

// WorkResult

// required int32 partition_id = 1;
inline bool WorkResult::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkResult::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkResult::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkResult::clear_partition_id() {
  partition_id_ = 0;
  clear_has_partition_id();
}
inline ::google::protobuf::int32 WorkResult::partition_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkResult.partition_id)
  return partition_id_;
}
inline void WorkResult::set_partition_id(::google::protobuf::int32 value) {
  set_has_partition_id();
  partition_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.WorkResult.partition_id)
}

// repeated int32 dep_id = 2 [packed = true];
inline int WorkResult::dep_id_size() const {
  return dep_id_.size();
}
inline void WorkResult::clear_dep_id() {
  dep_id_.Clear();
}
inline ::google::protobuf::int32 WorkResult::dep_id(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkResult.dep_id)
  return dep_id_.Get(index);
}
inline void WorkResult::set_dep_id(int index, ::google::protobuf::int32 value) {
  dep_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkResult.dep_id)
}
inline void WorkResult::add_dep_id(::google::protobuf::int32 value) {
  dep_id_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkResult.dep_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WorkResult::dep_id() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkResult.dep_id)
  return dep_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WorkResult::mutable_dep_id() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkResult.dep_id)
  return &dep_id_;
}

// repeated bytes dep_data = 3;
inline int WorkResult::dep_data_size() const {
  return dep_data_.size();
}
inline void WorkResult::clear_dep_data() {
  dep_data_.Clear();
}
inline const ::std::string& WorkResult::dep_data(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkResult.dep_data)
  return dep_data_.Get(index);
}
inline ::std::string* WorkResult::mutable_dep_data(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.WorkResult.dep_data)
  return dep_data_.Mutable(index);
}
inline void WorkResult::set_dep_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:peloton.message.WorkResult.dep_data)
  dep_data_.Mutable(index)->assign(value);
}
inline void WorkResult::set_dep_data(int index, const char* value) {
  dep_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:peloton.message.WorkResult.dep_data)
}
inline void WorkResult::set_dep_data(int index, const void* value, size_t size) {
  dep_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:peloton.message.WorkResult.dep_data)
}
inline ::std::string* WorkResult::add_dep_data() {
  return dep_data_.Add();
}
inline void WorkResult::add_dep_data(const ::std::string& value) {
  dep_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:peloton.message.WorkResult.dep_data)
}
inline void WorkResult::add_dep_data(const char* value) {
  dep_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:peloton.message.WorkResult.dep_data)
}
inline void WorkResult::add_dep_data(const void* value, size_t size) {
  dep_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:peloton.message.WorkResult.dep_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WorkResult::dep_data() const {
  // @@protoc_insertion_point(field_list:peloton.message.WorkResult.dep_data)
  return dep_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WorkResult::mutable_dep_data() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.WorkResult.dep_data)
  return &dep_data_;
}

// required .peloton.message.Status status = 4;
inline bool WorkResult::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkResult::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkResult::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkResult::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status WorkResult::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkResult.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void WorkResult::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.WorkResult.status)
}

// optional bytes error = 5;
inline bool WorkResult::has_error() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorkResult::set_has_error() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorkResult::clear_has_error() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorkResult::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& WorkResult::error() const {
  // @@protoc_insertion_point(field_get:peloton.message.WorkResult.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkResult::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.WorkResult.error)
}
inline void WorkResult::set_error(const char* value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.WorkResult.error)
}
inline void WorkResult::set_error(const void* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.WorkResult.error)
}
inline ::std::string* WorkResult::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:peloton.message.WorkResult.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkResult::release_error() {
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkResult::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.WorkResult.error)
}

// -------------------------------------------------------------------

// QueryEstimate

// repeated int32 stmt_ids = 1 [packed = true];
inline int QueryEstimate::stmt_ids_size() const {
  return stmt_ids_.size();
}
inline void QueryEstimate::clear_stmt_ids() {
  stmt_ids_.Clear();
}
inline ::google::protobuf::int32 QueryEstimate::stmt_ids(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.QueryEstimate.stmt_ids)
  return stmt_ids_.Get(index);
}
inline void QueryEstimate::set_stmt_ids(int index, ::google::protobuf::int32 value) {
  stmt_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.QueryEstimate.stmt_ids)
}
inline void QueryEstimate::add_stmt_ids(::google::protobuf::int32 value) {
  stmt_ids_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.QueryEstimate.stmt_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QueryEstimate::stmt_ids() const {
  // @@protoc_insertion_point(field_list:peloton.message.QueryEstimate.stmt_ids)
  return stmt_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QueryEstimate::mutable_stmt_ids() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.QueryEstimate.stmt_ids)
  return &stmt_ids_;
}

// repeated int32 stmt_counters = 2 [packed = true];
inline int QueryEstimate::stmt_counters_size() const {
  return stmt_counters_.size();
}
inline void QueryEstimate::clear_stmt_counters() {
  stmt_counters_.Clear();
}
inline ::google::protobuf::int32 QueryEstimate::stmt_counters(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.QueryEstimate.stmt_counters)
  return stmt_counters_.Get(index);
}
inline void QueryEstimate::set_stmt_counters(int index, ::google::protobuf::int32 value) {
  stmt_counters_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.QueryEstimate.stmt_counters)
}
inline void QueryEstimate::add_stmt_counters(::google::protobuf::int32 value) {
  stmt_counters_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.QueryEstimate.stmt_counters)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QueryEstimate::stmt_counters() const {
  // @@protoc_insertion_point(field_list:peloton.message.QueryEstimate.stmt_counters)
  return stmt_counters_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QueryEstimate::mutable_stmt_counters() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.QueryEstimate.stmt_counters)
  return &stmt_counters_;
}

// optional int32 time_estimate = 3;
inline bool QueryEstimate::has_time_estimate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryEstimate::set_has_time_estimate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryEstimate::clear_has_time_estimate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryEstimate::clear_time_estimate() {
  time_estimate_ = 0;
  clear_has_time_estimate();
}
inline ::google::protobuf::int32 QueryEstimate::time_estimate() const {
  // @@protoc_insertion_point(field_get:peloton.message.QueryEstimate.time_estimate)
  return time_estimate_;
}
inline void QueryEstimate::set_time_estimate(::google::protobuf::int32 value) {
  set_has_time_estimate();
  time_estimate_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.QueryEstimate.time_estimate)
}

// -------------------------------------------------------------------

// TransactionInitRequest

// optional int64 last_transaction_id = 1;
inline bool TransactionInitRequest::has_last_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionInitRequest::set_has_last_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionInitRequest::clear_has_last_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionInitRequest::clear_last_transaction_id() {
  last_transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_transaction_id();
}
inline ::google::protobuf::int64 TransactionInitRequest::last_transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitRequest.last_transaction_id)
  return last_transaction_id_;
}
inline void TransactionInitRequest::set_last_transaction_id(::google::protobuf::int64 value) {
  set_has_last_transaction_id();
  last_transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitRequest.last_transaction_id)
}

// required int64 transaction_id = 2;
inline bool TransactionInitRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionInitRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionInitRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionInitRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionInitRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitRequest.transaction_id)
  return transaction_id_;
}
inline void TransactionInitRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitRequest.transaction_id)
}

// required int32 base_partition = 3;
inline bool TransactionInitRequest::has_base_partition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionInitRequest::set_has_base_partition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionInitRequest::clear_has_base_partition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionInitRequest::clear_base_partition() {
  base_partition_ = 0;
  clear_has_base_partition();
}
inline ::google::protobuf::int32 TransactionInitRequest::base_partition() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitRequest.base_partition)
  return base_partition_;
}
inline void TransactionInitRequest::set_base_partition(::google::protobuf::int32 value) {
  set_has_base_partition();
  base_partition_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitRequest.base_partition)
}

// required int32 procedure_id = 4;
inline bool TransactionInitRequest::has_procedure_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransactionInitRequest::set_has_procedure_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransactionInitRequest::clear_has_procedure_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransactionInitRequest::clear_procedure_id() {
  procedure_id_ = 0;
  clear_has_procedure_id();
}
inline ::google::protobuf::int32 TransactionInitRequest::procedure_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitRequest.procedure_id)
  return procedure_id_;
}
inline void TransactionInitRequest::set_procedure_id(::google::protobuf::int32 value) {
  set_has_procedure_id();
  procedure_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitRequest.procedure_id)
}

// repeated int32 partitions = 5 [packed = true];
inline int TransactionInitRequest::partitions_size() const {
  return partitions_.size();
}
inline void TransactionInitRequest::clear_partitions() {
  partitions_.Clear();
}
inline ::google::protobuf::int32 TransactionInitRequest::partitions(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitRequest.partitions)
  return partitions_.Get(index);
}
inline void TransactionInitRequest::set_partitions(int index, ::google::protobuf::int32 value) {
  partitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitRequest.partitions)
}
inline void TransactionInitRequest::add_partitions(::google::protobuf::int32 value) {
  partitions_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionInitRequest.partitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionInitRequest::partitions() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionInitRequest.partitions)
  return partitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionInitRequest::mutable_partitions() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionInitRequest.partitions)
  return &partitions_;
}

// optional bytes proc_params = 6;
inline bool TransactionInitRequest::has_proc_params() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TransactionInitRequest::set_has_proc_params() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TransactionInitRequest::clear_has_proc_params() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TransactionInitRequest::clear_proc_params() {
  proc_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_proc_params();
}
inline const ::std::string& TransactionInitRequest::proc_params() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitRequest.proc_params)
  return proc_params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionInitRequest::set_proc_params(const ::std::string& value) {
  set_has_proc_params();
  proc_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitRequest.proc_params)
}
inline void TransactionInitRequest::set_proc_params(const char* value) {
  set_has_proc_params();
  proc_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionInitRequest.proc_params)
}
inline void TransactionInitRequest::set_proc_params(const void* value, size_t size) {
  set_has_proc_params();
  proc_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionInitRequest.proc_params)
}
inline ::std::string* TransactionInitRequest::mutable_proc_params() {
  set_has_proc_params();
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionInitRequest.proc_params)
  return proc_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionInitRequest::release_proc_params() {
  clear_has_proc_params();
  return proc_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionInitRequest::set_allocated_proc_params(::std::string* proc_params) {
  if (proc_params != NULL) {
    set_has_proc_params();
  } else {
    clear_has_proc_params();
  }
  proc_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proc_params);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.TransactionInitRequest.proc_params)
}

// repeated .peloton.message.WorkFragment prefetch_fragments = 7;
inline int TransactionInitRequest::prefetch_fragments_size() const {
  return prefetch_fragments_.size();
}
inline void TransactionInitRequest::clear_prefetch_fragments() {
  prefetch_fragments_.Clear();
}
inline const ::peloton::message::WorkFragment& TransactionInitRequest::prefetch_fragments(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitRequest.prefetch_fragments)
  return prefetch_fragments_.Get(index);
}
inline ::peloton::message::WorkFragment* TransactionInitRequest::mutable_prefetch_fragments(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionInitRequest.prefetch_fragments)
  return prefetch_fragments_.Mutable(index);
}
inline ::peloton::message::WorkFragment* TransactionInitRequest::add_prefetch_fragments() {
  // @@protoc_insertion_point(field_add:peloton.message.TransactionInitRequest.prefetch_fragments)
  return prefetch_fragments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment >*
TransactionInitRequest::mutable_prefetch_fragments() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionInitRequest.prefetch_fragments)
  return &prefetch_fragments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment >&
TransactionInitRequest::prefetch_fragments() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionInitRequest.prefetch_fragments)
  return prefetch_fragments_;
}

// repeated bytes prefetch_params = 8;
inline int TransactionInitRequest::prefetch_params_size() const {
  return prefetch_params_.size();
}
inline void TransactionInitRequest::clear_prefetch_params() {
  prefetch_params_.Clear();
}
inline const ::std::string& TransactionInitRequest::prefetch_params(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitRequest.prefetch_params)
  return prefetch_params_.Get(index);
}
inline ::std::string* TransactionInitRequest::mutable_prefetch_params(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionInitRequest.prefetch_params)
  return prefetch_params_.Mutable(index);
}
inline void TransactionInitRequest::set_prefetch_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitRequest.prefetch_params)
  prefetch_params_.Mutable(index)->assign(value);
}
inline void TransactionInitRequest::set_prefetch_params(int index, const char* value) {
  prefetch_params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionInitRequest.prefetch_params)
}
inline void TransactionInitRequest::set_prefetch_params(int index, const void* value, size_t size) {
  prefetch_params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionInitRequest.prefetch_params)
}
inline ::std::string* TransactionInitRequest::add_prefetch_params() {
  return prefetch_params_.Add();
}
inline void TransactionInitRequest::add_prefetch_params(const ::std::string& value) {
  prefetch_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionInitRequest.prefetch_params)
}
inline void TransactionInitRequest::add_prefetch_params(const char* value) {
  prefetch_params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:peloton.message.TransactionInitRequest.prefetch_params)
}
inline void TransactionInitRequest::add_prefetch_params(const void* value, size_t size) {
  prefetch_params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:peloton.message.TransactionInitRequest.prefetch_params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TransactionInitRequest::prefetch_params() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionInitRequest.prefetch_params)
  return prefetch_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TransactionInitRequest::mutable_prefetch_params() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionInitRequest.prefetch_params)
  return &prefetch_params_;
}

// -------------------------------------------------------------------

// TransactionInitResponse

// required int64 transaction_id = 1;
inline bool TransactionInitResponse::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionInitResponse::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionInitResponse::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionInitResponse::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionInitResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitResponse.transaction_id)
  return transaction_id_;
}
inline void TransactionInitResponse::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitResponse.transaction_id)
}

// repeated int32 partitions = 2 [packed = true];
inline int TransactionInitResponse::partitions_size() const {
  return partitions_.size();
}
inline void TransactionInitResponse::clear_partitions() {
  partitions_.Clear();
}
inline ::google::protobuf::int32 TransactionInitResponse::partitions(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitResponse.partitions)
  return partitions_.Get(index);
}
inline void TransactionInitResponse::set_partitions(int index, ::google::protobuf::int32 value) {
  partitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitResponse.partitions)
}
inline void TransactionInitResponse::add_partitions(::google::protobuf::int32 value) {
  partitions_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionInitResponse.partitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionInitResponse::partitions() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionInitResponse.partitions)
  return partitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionInitResponse::mutable_partitions() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionInitResponse.partitions)
  return &partitions_;
}

// required .peloton.message.Status status = 3;
inline bool TransactionInitResponse::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionInitResponse::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionInitResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionInitResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionInitResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionInitResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitResponse.status)
}

// optional int32 reject_partition = 4;
inline bool TransactionInitResponse::has_reject_partition() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransactionInitResponse::set_has_reject_partition() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransactionInitResponse::clear_has_reject_partition() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransactionInitResponse::clear_reject_partition() {
  reject_partition_ = 0;
  clear_has_reject_partition();
}
inline ::google::protobuf::int32 TransactionInitResponse::reject_partition() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitResponse.reject_partition)
  return reject_partition_;
}
inline void TransactionInitResponse::set_reject_partition(::google::protobuf::int32 value) {
  set_has_reject_partition();
  reject_partition_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitResponse.reject_partition)
}

// optional int64 reject_transaction_id = 5;
inline bool TransactionInitResponse::has_reject_transaction_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransactionInitResponse::set_has_reject_transaction_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransactionInitResponse::clear_has_reject_transaction_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransactionInitResponse::clear_reject_transaction_id() {
  reject_transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_reject_transaction_id();
}
inline ::google::protobuf::int64 TransactionInitResponse::reject_transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionInitResponse.reject_transaction_id)
  return reject_transaction_id_;
}
inline void TransactionInitResponse::set_reject_transaction_id(::google::protobuf::int64 value) {
  set_has_reject_transaction_id();
  reject_transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionInitResponse.reject_transaction_id)
}

// -------------------------------------------------------------------

// TransactionWorkRequest

// optional int64 last_transaction_id = 1;
inline bool TransactionWorkRequest::has_last_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionWorkRequest::set_has_last_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionWorkRequest::clear_has_last_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionWorkRequest::clear_last_transaction_id() {
  last_transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_transaction_id();
}
inline ::google::protobuf::int64 TransactionWorkRequest::last_transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.last_transaction_id)
  return last_transaction_id_;
}
inline void TransactionWorkRequest::set_last_transaction_id(::google::protobuf::int64 value) {
  set_has_last_transaction_id();
  last_transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.last_transaction_id)
}

// required int64 transaction_id = 2;
inline bool TransactionWorkRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionWorkRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionWorkRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionWorkRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionWorkRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.transaction_id)
  return transaction_id_;
}
inline void TransactionWorkRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.transaction_id)
}

// required int32 source_partition = 3;
inline bool TransactionWorkRequest::has_source_partition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionWorkRequest::set_has_source_partition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionWorkRequest::clear_has_source_partition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionWorkRequest::clear_source_partition() {
  source_partition_ = 0;
  clear_has_source_partition();
}
inline ::google::protobuf::int32 TransactionWorkRequest::source_partition() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.source_partition)
  return source_partition_;
}
inline void TransactionWorkRequest::set_source_partition(::google::protobuf::int32 value) {
  set_has_source_partition();
  source_partition_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.source_partition)
}

// repeated .peloton.message.WorkFragment fragments = 4;
inline int TransactionWorkRequest::fragments_size() const {
  return fragments_.size();
}
inline void TransactionWorkRequest::clear_fragments() {
  fragments_.Clear();
}
inline const ::peloton::message::WorkFragment& TransactionWorkRequest::fragments(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.fragments)
  return fragments_.Get(index);
}
inline ::peloton::message::WorkFragment* TransactionWorkRequest::mutable_fragments(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionWorkRequest.fragments)
  return fragments_.Mutable(index);
}
inline ::peloton::message::WorkFragment* TransactionWorkRequest::add_fragments() {
  // @@protoc_insertion_point(field_add:peloton.message.TransactionWorkRequest.fragments)
  return fragments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment >*
TransactionWorkRequest::mutable_fragments() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionWorkRequest.fragments)
  return &fragments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkFragment >&
TransactionWorkRequest::fragments() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionWorkRequest.fragments)
  return fragments_;
}

// required int32 procedure_id = 5;
inline bool TransactionWorkRequest::has_procedure_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransactionWorkRequest::set_has_procedure_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransactionWorkRequest::clear_has_procedure_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransactionWorkRequest::clear_procedure_id() {
  procedure_id_ = 0;
  clear_has_procedure_id();
}
inline ::google::protobuf::int32 TransactionWorkRequest::procedure_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.procedure_id)
  return procedure_id_;
}
inline void TransactionWorkRequest::set_procedure_id(::google::protobuf::int32 value) {
  set_has_procedure_id();
  procedure_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.procedure_id)
}

// repeated bytes params = 6;
inline int TransactionWorkRequest::params_size() const {
  return params_.size();
}
inline void TransactionWorkRequest::clear_params() {
  params_.Clear();
}
inline const ::std::string& TransactionWorkRequest::params(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.params)
  return params_.Get(index);
}
inline ::std::string* TransactionWorkRequest::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionWorkRequest.params)
  return params_.Mutable(index);
}
inline void TransactionWorkRequest::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.params)
  params_.Mutable(index)->assign(value);
}
inline void TransactionWorkRequest::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionWorkRequest.params)
}
inline void TransactionWorkRequest::set_params(int index, const void* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionWorkRequest.params)
}
inline ::std::string* TransactionWorkRequest::add_params() {
  return params_.Add();
}
inline void TransactionWorkRequest::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionWorkRequest.params)
}
inline void TransactionWorkRequest::add_params(const char* value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:peloton.message.TransactionWorkRequest.params)
}
inline void TransactionWorkRequest::add_params(const void* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:peloton.message.TransactionWorkRequest.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TransactionWorkRequest::params() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionWorkRequest.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TransactionWorkRequest::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionWorkRequest.params)
  return &params_;
}

// repeated int32 attached_dep_id = 7 [packed = true];
inline int TransactionWorkRequest::attached_dep_id_size() const {
  return attached_dep_id_.size();
}
inline void TransactionWorkRequest::clear_attached_dep_id() {
  attached_dep_id_.Clear();
}
inline ::google::protobuf::int32 TransactionWorkRequest::attached_dep_id(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.attached_dep_id)
  return attached_dep_id_.Get(index);
}
inline void TransactionWorkRequest::set_attached_dep_id(int index, ::google::protobuf::int32 value) {
  attached_dep_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.attached_dep_id)
}
inline void TransactionWorkRequest::add_attached_dep_id(::google::protobuf::int32 value) {
  attached_dep_id_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionWorkRequest.attached_dep_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionWorkRequest::attached_dep_id() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionWorkRequest.attached_dep_id)
  return attached_dep_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionWorkRequest::mutable_attached_dep_id() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionWorkRequest.attached_dep_id)
  return &attached_dep_id_;
}

// repeated bytes attached_data = 8;
inline int TransactionWorkRequest::attached_data_size() const {
  return attached_data_.size();
}
inline void TransactionWorkRequest::clear_attached_data() {
  attached_data_.Clear();
}
inline const ::std::string& TransactionWorkRequest::attached_data(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.attached_data)
  return attached_data_.Get(index);
}
inline ::std::string* TransactionWorkRequest::mutable_attached_data(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionWorkRequest.attached_data)
  return attached_data_.Mutable(index);
}
inline void TransactionWorkRequest::set_attached_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.attached_data)
  attached_data_.Mutable(index)->assign(value);
}
inline void TransactionWorkRequest::set_attached_data(int index, const char* value) {
  attached_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionWorkRequest.attached_data)
}
inline void TransactionWorkRequest::set_attached_data(int index, const void* value, size_t size) {
  attached_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionWorkRequest.attached_data)
}
inline ::std::string* TransactionWorkRequest::add_attached_data() {
  return attached_data_.Add();
}
inline void TransactionWorkRequest::add_attached_data(const ::std::string& value) {
  attached_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionWorkRequest.attached_data)
}
inline void TransactionWorkRequest::add_attached_data(const char* value) {
  attached_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:peloton.message.TransactionWorkRequest.attached_data)
}
inline void TransactionWorkRequest::add_attached_data(const void* value, size_t size) {
  attached_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:peloton.message.TransactionWorkRequest.attached_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TransactionWorkRequest::attached_data() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionWorkRequest.attached_data)
  return attached_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TransactionWorkRequest::mutable_attached_data() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionWorkRequest.attached_data)
  return &attached_data_;
}

// repeated int32 done_partition = 9 [packed = true];
inline int TransactionWorkRequest::done_partition_size() const {
  return done_partition_.size();
}
inline void TransactionWorkRequest::clear_done_partition() {
  done_partition_.Clear();
}
inline ::google::protobuf::int32 TransactionWorkRequest::done_partition(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.done_partition)
  return done_partition_.Get(index);
}
inline void TransactionWorkRequest::set_done_partition(int index, ::google::protobuf::int32 value) {
  done_partition_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.done_partition)
}
inline void TransactionWorkRequest::add_done_partition(::google::protobuf::int32 value) {
  done_partition_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionWorkRequest.done_partition)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionWorkRequest::done_partition() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionWorkRequest.done_partition)
  return done_partition_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionWorkRequest::mutable_done_partition() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionWorkRequest.done_partition)
  return &done_partition_;
}

// optional bytes proc_params = 10;
inline bool TransactionWorkRequest::has_proc_params() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TransactionWorkRequest::set_has_proc_params() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TransactionWorkRequest::clear_has_proc_params() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TransactionWorkRequest::clear_proc_params() {
  proc_params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_proc_params();
}
inline const ::std::string& TransactionWorkRequest::proc_params() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkRequest.proc_params)
  return proc_params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionWorkRequest::set_proc_params(const ::std::string& value) {
  set_has_proc_params();
  proc_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkRequest.proc_params)
}
inline void TransactionWorkRequest::set_proc_params(const char* value) {
  set_has_proc_params();
  proc_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionWorkRequest.proc_params)
}
inline void TransactionWorkRequest::set_proc_params(const void* value, size_t size) {
  set_has_proc_params();
  proc_params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionWorkRequest.proc_params)
}
inline ::std::string* TransactionWorkRequest::mutable_proc_params() {
  set_has_proc_params();
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionWorkRequest.proc_params)
  return proc_params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionWorkRequest::release_proc_params() {
  clear_has_proc_params();
  return proc_params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionWorkRequest::set_allocated_proc_params(::std::string* proc_params) {
  if (proc_params != NULL) {
    set_has_proc_params();
  } else {
    clear_has_proc_params();
  }
  proc_params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proc_params);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.TransactionWorkRequest.proc_params)
}

// -------------------------------------------------------------------

// TransactionWorkResponse

// required int64 transaction_id = 1;
inline bool TransactionWorkResponse::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionWorkResponse::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionWorkResponse::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionWorkResponse::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionWorkResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkResponse.transaction_id)
  return transaction_id_;
}
inline void TransactionWorkResponse::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkResponse.transaction_id)
}

// repeated .peloton.message.WorkResult results = 2;
inline int TransactionWorkResponse::results_size() const {
  return results_.size();
}
inline void TransactionWorkResponse::clear_results() {
  results_.Clear();
}
inline const ::peloton::message::WorkResult& TransactionWorkResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkResponse.results)
  return results_.Get(index);
}
inline ::peloton::message::WorkResult* TransactionWorkResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionWorkResponse.results)
  return results_.Mutable(index);
}
inline ::peloton::message::WorkResult* TransactionWorkResponse::add_results() {
  // @@protoc_insertion_point(field_add:peloton.message.TransactionWorkResponse.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkResult >*
TransactionWorkResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionWorkResponse.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::peloton::message::WorkResult >&
TransactionWorkResponse::results() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionWorkResponse.results)
  return results_;
}

// required .peloton.message.Status status = 3;
inline bool TransactionWorkResponse::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionWorkResponse::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionWorkResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionWorkResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionWorkResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionWorkResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionWorkResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionWorkResponse.status)
}

// -------------------------------------------------------------------

// TransactionPrefetchResult

// optional int64 last_transaction_id = 1;
inline bool TransactionPrefetchResult::has_last_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionPrefetchResult::set_has_last_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionPrefetchResult::clear_has_last_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionPrefetchResult::clear_last_transaction_id() {
  last_transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_transaction_id();
}
inline ::google::protobuf::int64 TransactionPrefetchResult::last_transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchResult.last_transaction_id)
  return last_transaction_id_;
}
inline void TransactionPrefetchResult::set_last_transaction_id(::google::protobuf::int64 value) {
  set_has_last_transaction_id();
  last_transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchResult.last_transaction_id)
}

// required int64 transaction_id = 2;
inline bool TransactionPrefetchResult::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionPrefetchResult::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionPrefetchResult::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionPrefetchResult::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionPrefetchResult::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchResult.transaction_id)
  return transaction_id_;
}
inline void TransactionPrefetchResult::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchResult.transaction_id)
}

// required int32 source_partition = 3;
inline bool TransactionPrefetchResult::has_source_partition() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionPrefetchResult::set_has_source_partition() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionPrefetchResult::clear_has_source_partition() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionPrefetchResult::clear_source_partition() {
  source_partition_ = 0;
  clear_has_source_partition();
}
inline ::google::protobuf::int32 TransactionPrefetchResult::source_partition() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchResult.source_partition)
  return source_partition_;
}
inline void TransactionPrefetchResult::set_source_partition(::google::protobuf::int32 value) {
  set_has_source_partition();
  source_partition_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchResult.source_partition)
}

// required .peloton.message.WorkResult result = 4;
inline bool TransactionPrefetchResult::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransactionPrefetchResult::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransactionPrefetchResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransactionPrefetchResult::clear_result() {
  if (result_ != NULL) result_->::peloton::message::WorkResult::Clear();
  clear_has_result();
}
inline const ::peloton::message::WorkResult& TransactionPrefetchResult::result() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchResult.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::peloton::message::WorkResult* TransactionPrefetchResult::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::peloton::message::WorkResult;
  }
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionPrefetchResult.result)
  return result_;
}
inline ::peloton::message::WorkResult* TransactionPrefetchResult::release_result() {
  clear_has_result();
  ::peloton::message::WorkResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void TransactionPrefetchResult::set_allocated_result(::peloton::message::WorkResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:peloton.message.TransactionPrefetchResult.result)
}

// required .peloton.message.Status status = 5;
inline bool TransactionPrefetchResult::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransactionPrefetchResult::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransactionPrefetchResult::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransactionPrefetchResult::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionPrefetchResult::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchResult.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionPrefetchResult::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchResult.status)
}

// repeated int32 stmt_counter = 6 [packed = true];
inline int TransactionPrefetchResult::stmt_counter_size() const {
  return stmt_counter_.size();
}
inline void TransactionPrefetchResult::clear_stmt_counter() {
  stmt_counter_.Clear();
}
inline ::google::protobuf::int32 TransactionPrefetchResult::stmt_counter(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchResult.stmt_counter)
  return stmt_counter_.Get(index);
}
inline void TransactionPrefetchResult::set_stmt_counter(int index, ::google::protobuf::int32 value) {
  stmt_counter_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchResult.stmt_counter)
}
inline void TransactionPrefetchResult::add_stmt_counter(::google::protobuf::int32 value) {
  stmt_counter_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionPrefetchResult.stmt_counter)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionPrefetchResult::stmt_counter() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionPrefetchResult.stmt_counter)
  return stmt_counter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionPrefetchResult::mutable_stmt_counter() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionPrefetchResult.stmt_counter)
  return &stmt_counter_;
}

// repeated int32 fragment_id = 7 [packed = true];
inline int TransactionPrefetchResult::fragment_id_size() const {
  return fragment_id_.size();
}
inline void TransactionPrefetchResult::clear_fragment_id() {
  fragment_id_.Clear();
}
inline ::google::protobuf::int32 TransactionPrefetchResult::fragment_id(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchResult.fragment_id)
  return fragment_id_.Get(index);
}
inline void TransactionPrefetchResult::set_fragment_id(int index, ::google::protobuf::int32 value) {
  fragment_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchResult.fragment_id)
}
inline void TransactionPrefetchResult::add_fragment_id(::google::protobuf::int32 value) {
  fragment_id_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionPrefetchResult.fragment_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionPrefetchResult::fragment_id() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionPrefetchResult.fragment_id)
  return fragment_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionPrefetchResult::mutable_fragment_id() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionPrefetchResult.fragment_id)
  return &fragment_id_;
}

// repeated int32 param_hash = 8 [packed = true];
inline int TransactionPrefetchResult::param_hash_size() const {
  return param_hash_.size();
}
inline void TransactionPrefetchResult::clear_param_hash() {
  param_hash_.Clear();
}
inline ::google::protobuf::int32 TransactionPrefetchResult::param_hash(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchResult.param_hash)
  return param_hash_.Get(index);
}
inline void TransactionPrefetchResult::set_param_hash(int index, ::google::protobuf::int32 value) {
  param_hash_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchResult.param_hash)
}
inline void TransactionPrefetchResult::add_param_hash(::google::protobuf::int32 value) {
  param_hash_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionPrefetchResult.param_hash)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionPrefetchResult::param_hash() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionPrefetchResult.param_hash)
  return param_hash_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionPrefetchResult::mutable_param_hash() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionPrefetchResult.param_hash)
  return &param_hash_;
}

// -------------------------------------------------------------------

// TransactionPrefetchAcknowledgement

// required int64 transaction_id = 1;
inline bool TransactionPrefetchAcknowledgement::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionPrefetchAcknowledgement::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionPrefetchAcknowledgement::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionPrefetchAcknowledgement::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionPrefetchAcknowledgement::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchAcknowledgement.transaction_id)
  return transaction_id_;
}
inline void TransactionPrefetchAcknowledgement::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchAcknowledgement.transaction_id)
}

// required int32 target_partition = 2;
inline bool TransactionPrefetchAcknowledgement::has_target_partition() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionPrefetchAcknowledgement::set_has_target_partition() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionPrefetchAcknowledgement::clear_has_target_partition() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionPrefetchAcknowledgement::clear_target_partition() {
  target_partition_ = 0;
  clear_has_target_partition();
}
inline ::google::protobuf::int32 TransactionPrefetchAcknowledgement::target_partition() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrefetchAcknowledgement.target_partition)
  return target_partition_;
}
inline void TransactionPrefetchAcknowledgement::set_target_partition(::google::protobuf::int32 value) {
  set_has_target_partition();
  target_partition_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrefetchAcknowledgement.target_partition)
}

// -------------------------------------------------------------------

// TransactionMapRequest

// optional int64 last_transaction_id = 1;
inline bool TransactionMapRequest::has_last_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionMapRequest::set_has_last_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionMapRequest::clear_has_last_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionMapRequest::clear_last_transaction_id() {
  last_transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_transaction_id();
}
inline ::google::protobuf::int64 TransactionMapRequest::last_transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapRequest.last_transaction_id)
  return last_transaction_id_;
}
inline void TransactionMapRequest::set_last_transaction_id(::google::protobuf::int64 value) {
  set_has_last_transaction_id();
  last_transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapRequest.last_transaction_id)
}

// required int64 transaction_id = 2;
inline bool TransactionMapRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionMapRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionMapRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionMapRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionMapRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapRequest.transaction_id)
  return transaction_id_;
}
inline void TransactionMapRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapRequest.transaction_id)
}

// required int64 client_handle = 3;
inline bool TransactionMapRequest::has_client_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionMapRequest::set_has_client_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionMapRequest::clear_has_client_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionMapRequest::clear_client_handle() {
  client_handle_ = GOOGLE_LONGLONG(0);
  clear_has_client_handle();
}
inline ::google::protobuf::int64 TransactionMapRequest::client_handle() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapRequest.client_handle)
  return client_handle_;
}
inline void TransactionMapRequest::set_client_handle(::google::protobuf::int64 value) {
  set_has_client_handle();
  client_handle_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapRequest.client_handle)
}

// required int32 base_partition = 4;
inline bool TransactionMapRequest::has_base_partition() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransactionMapRequest::set_has_base_partition() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransactionMapRequest::clear_has_base_partition() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransactionMapRequest::clear_base_partition() {
  base_partition_ = 0;
  clear_has_base_partition();
}
inline ::google::protobuf::int32 TransactionMapRequest::base_partition() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapRequest.base_partition)
  return base_partition_;
}
inline void TransactionMapRequest::set_base_partition(::google::protobuf::int32 value) {
  set_has_base_partition();
  base_partition_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapRequest.base_partition)
}

// required int32 procedure_id = 5;
inline bool TransactionMapRequest::has_procedure_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransactionMapRequest::set_has_procedure_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransactionMapRequest::clear_has_procedure_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransactionMapRequest::clear_procedure_id() {
  procedure_id_ = 0;
  clear_has_procedure_id();
}
inline ::google::protobuf::int32 TransactionMapRequest::procedure_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapRequest.procedure_id)
  return procedure_id_;
}
inline void TransactionMapRequest::set_procedure_id(::google::protobuf::int32 value) {
  set_has_procedure_id();
  procedure_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapRequest.procedure_id)
}

// required bytes params = 6;
inline bool TransactionMapRequest::has_params() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TransactionMapRequest::set_has_params() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TransactionMapRequest::clear_has_params() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TransactionMapRequest::clear_params() {
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_params();
}
inline const ::std::string& TransactionMapRequest::params() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapRequest.params)
  return params_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionMapRequest::set_params(const ::std::string& value) {
  set_has_params();
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapRequest.params)
}
inline void TransactionMapRequest::set_params(const char* value) {
  set_has_params();
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionMapRequest.params)
}
inline void TransactionMapRequest::set_params(const void* value, size_t size) {
  set_has_params();
  params_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionMapRequest.params)
}
inline ::std::string* TransactionMapRequest::mutable_params() {
  set_has_params();
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionMapRequest.params)
  return params_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionMapRequest::release_params() {
  clear_has_params();
  return params_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionMapRequest::set_allocated_params(::std::string* params) {
  if (params != NULL) {
    set_has_params();
  } else {
    clear_has_params();
  }
  params_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), params);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.TransactionMapRequest.params)
}

// -------------------------------------------------------------------

// TransactionMapResponse

// required int64 transaction_id = 1;
inline bool TransactionMapResponse::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionMapResponse::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionMapResponse::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionMapResponse::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionMapResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapResponse.transaction_id)
  return transaction_id_;
}
inline void TransactionMapResponse::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapResponse.transaction_id)
}

// repeated int32 partitions = 2 [packed = true];
inline int TransactionMapResponse::partitions_size() const {
  return partitions_.size();
}
inline void TransactionMapResponse::clear_partitions() {
  partitions_.Clear();
}
inline ::google::protobuf::int32 TransactionMapResponse::partitions(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapResponse.partitions)
  return partitions_.Get(index);
}
inline void TransactionMapResponse::set_partitions(int index, ::google::protobuf::int32 value) {
  partitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapResponse.partitions)
}
inline void TransactionMapResponse::add_partitions(::google::protobuf::int32 value) {
  partitions_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionMapResponse.partitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionMapResponse::partitions() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionMapResponse.partitions)
  return partitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionMapResponse::mutable_partitions() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionMapResponse.partitions)
  return &partitions_;
}

// required .peloton.message.Status status = 3;
inline bool TransactionMapResponse::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionMapResponse::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionMapResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionMapResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionMapResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionMapResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionMapResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionMapResponse.status)
}

// -------------------------------------------------------------------

// TransactionReduceRequest

// required int64 transaction_id = 1;
inline bool TransactionReduceRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionReduceRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionReduceRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionReduceRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionReduceRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionReduceRequest.transaction_id)
  return transaction_id_;
}
inline void TransactionReduceRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionReduceRequest.transaction_id)
}

// -------------------------------------------------------------------

// TransactionReduceResponse_ReduceResult

// required int32 partition_id = 1;
inline bool TransactionReduceResponse_ReduceResult::has_partition_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionReduceResponse_ReduceResult::set_has_partition_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionReduceResponse_ReduceResult::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionReduceResponse_ReduceResult::clear_partition_id() {
  partition_id_ = 0;
  clear_has_partition_id();
}
inline ::google::protobuf::int32 TransactionReduceResponse_ReduceResult::partition_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionReduceResponse.ReduceResult.partition_id)
  return partition_id_;
}
inline void TransactionReduceResponse_ReduceResult::set_partition_id(::google::protobuf::int32 value) {
  set_has_partition_id();
  partition_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionReduceResponse.ReduceResult.partition_id)
}

// required bytes data = 2;
inline bool TransactionReduceResponse_ReduceResult::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionReduceResponse_ReduceResult::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionReduceResponse_ReduceResult::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionReduceResponse_ReduceResult::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& TransactionReduceResponse_ReduceResult::data() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionReduceResponse.ReduceResult.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionReduceResponse_ReduceResult::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionReduceResponse.ReduceResult.data)
}
inline void TransactionReduceResponse_ReduceResult::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionReduceResponse.ReduceResult.data)
}
inline void TransactionReduceResponse_ReduceResult::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionReduceResponse.ReduceResult.data)
}
inline ::std::string* TransactionReduceResponse_ReduceResult::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionReduceResponse.ReduceResult.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionReduceResponse_ReduceResult::release_data() {
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionReduceResponse_ReduceResult::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.TransactionReduceResponse.ReduceResult.data)
}

// required .peloton.message.Status status = 3;
inline bool TransactionReduceResponse_ReduceResult::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionReduceResponse_ReduceResult::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionReduceResponse_ReduceResult::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionReduceResponse_ReduceResult::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionReduceResponse_ReduceResult::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionReduceResponse.ReduceResult.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionReduceResponse_ReduceResult::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionReduceResponse.ReduceResult.status)
}

// optional bool error = 4 [default = false];
inline bool TransactionReduceResponse_ReduceResult::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransactionReduceResponse_ReduceResult::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransactionReduceResponse_ReduceResult::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransactionReduceResponse_ReduceResult::clear_error() {
  error_ = false;
  clear_has_error();
}
inline bool TransactionReduceResponse_ReduceResult::error() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionReduceResponse.ReduceResult.error)
  return error_;
}
inline void TransactionReduceResponse_ReduceResult::set_error(bool value) {
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionReduceResponse.ReduceResult.error)
}

// -------------------------------------------------------------------

// TransactionReduceResponse

// required int64 transaction_id = 1;
inline bool TransactionReduceResponse::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionReduceResponse::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionReduceResponse::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionReduceResponse::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionReduceResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionReduceResponse.transaction_id)
  return transaction_id_;
}
inline void TransactionReduceResponse::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionReduceResponse.transaction_id)
}

// repeated .peloton.message.TransactionReduceResponse.ReduceResult results = 2;
inline int TransactionReduceResponse::results_size() const {
  return results_.size();
}
inline void TransactionReduceResponse::clear_results() {
  results_.Clear();
}
inline const ::peloton::message::TransactionReduceResponse_ReduceResult& TransactionReduceResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionReduceResponse.results)
  return results_.Get(index);
}
inline ::peloton::message::TransactionReduceResponse_ReduceResult* TransactionReduceResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionReduceResponse.results)
  return results_.Mutable(index);
}
inline ::peloton::message::TransactionReduceResponse_ReduceResult* TransactionReduceResponse::add_results() {
  // @@protoc_insertion_point(field_add:peloton.message.TransactionReduceResponse.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::peloton::message::TransactionReduceResponse_ReduceResult >*
TransactionReduceResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionReduceResponse.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::peloton::message::TransactionReduceResponse_ReduceResult >&
TransactionReduceResponse::results() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionReduceResponse.results)
  return results_;
}

// required .peloton.message.Status status = 3;
inline bool TransactionReduceResponse::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionReduceResponse::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionReduceResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionReduceResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionReduceResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionReduceResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionReduceResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionReduceResponse.status)
}

// -------------------------------------------------------------------

// TransactionPrepareRequest

// required int64 transaction_id = 1;
inline bool TransactionPrepareRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionPrepareRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionPrepareRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionPrepareRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionPrepareRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrepareRequest.transaction_id)
  return transaction_id_;
}
inline void TransactionPrepareRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrepareRequest.transaction_id)
}

// repeated int32 partitions = 2 [packed = true];
inline int TransactionPrepareRequest::partitions_size() const {
  return partitions_.size();
}
inline void TransactionPrepareRequest::clear_partitions() {
  partitions_.Clear();
}
inline ::google::protobuf::int32 TransactionPrepareRequest::partitions(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrepareRequest.partitions)
  return partitions_.Get(index);
}
inline void TransactionPrepareRequest::set_partitions(int index, ::google::protobuf::int32 value) {
  partitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrepareRequest.partitions)
}
inline void TransactionPrepareRequest::add_partitions(::google::protobuf::int32 value) {
  partitions_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionPrepareRequest.partitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionPrepareRequest::partitions() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionPrepareRequest.partitions)
  return partitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionPrepareRequest::mutable_partitions() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionPrepareRequest.partitions)
  return &partitions_;
}

// -------------------------------------------------------------------

// TransactionPrepareResponse

// required int64 transaction_id = 1;
inline bool TransactionPrepareResponse::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionPrepareResponse::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionPrepareResponse::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionPrepareResponse::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionPrepareResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrepareResponse.transaction_id)
  return transaction_id_;
}
inline void TransactionPrepareResponse::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrepareResponse.transaction_id)
}

// repeated int32 partitions = 2 [packed = true];
inline int TransactionPrepareResponse::partitions_size() const {
  return partitions_.size();
}
inline void TransactionPrepareResponse::clear_partitions() {
  partitions_.Clear();
}
inline ::google::protobuf::int32 TransactionPrepareResponse::partitions(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrepareResponse.partitions)
  return partitions_.Get(index);
}
inline void TransactionPrepareResponse::set_partitions(int index, ::google::protobuf::int32 value) {
  partitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrepareResponse.partitions)
}
inline void TransactionPrepareResponse::add_partitions(::google::protobuf::int32 value) {
  partitions_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionPrepareResponse.partitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionPrepareResponse::partitions() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionPrepareResponse.partitions)
  return partitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionPrepareResponse::mutable_partitions() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionPrepareResponse.partitions)
  return &partitions_;
}

// required .peloton.message.Status status = 3;
inline bool TransactionPrepareResponse::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionPrepareResponse::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionPrepareResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionPrepareResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionPrepareResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionPrepareResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionPrepareResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionPrepareResponse.status)
}

// -------------------------------------------------------------------

// TransactionFinishRequest

// required int64 transaction_id = 1;
inline bool TransactionFinishRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionFinishRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionFinishRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionFinishRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionFinishRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionFinishRequest.transaction_id)
  return transaction_id_;
}
inline void TransactionFinishRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionFinishRequest.transaction_id)
}

// repeated int32 partitions = 2 [packed = true];
inline int TransactionFinishRequest::partitions_size() const {
  return partitions_.size();
}
inline void TransactionFinishRequest::clear_partitions() {
  partitions_.Clear();
}
inline ::google::protobuf::int32 TransactionFinishRequest::partitions(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionFinishRequest.partitions)
  return partitions_.Get(index);
}
inline void TransactionFinishRequest::set_partitions(int index, ::google::protobuf::int32 value) {
  partitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionFinishRequest.partitions)
}
inline void TransactionFinishRequest::add_partitions(::google::protobuf::int32 value) {
  partitions_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionFinishRequest.partitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionFinishRequest::partitions() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionFinishRequest.partitions)
  return partitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionFinishRequest::mutable_partitions() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionFinishRequest.partitions)
  return &partitions_;
}

// required .peloton.message.Status status = 3;
inline bool TransactionFinishRequest::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionFinishRequest::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionFinishRequest::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionFinishRequest::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionFinishRequest::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionFinishRequest.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionFinishRequest::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionFinishRequest.status)
}

// -------------------------------------------------------------------

// TransactionFinishResponse

// required int64 transaction_id = 1;
inline bool TransactionFinishResponse::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionFinishResponse::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionFinishResponse::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionFinishResponse::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionFinishResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionFinishResponse.transaction_id)
  return transaction_id_;
}
inline void TransactionFinishResponse::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionFinishResponse.transaction_id)
}

// repeated int32 partitions = 2 [packed = true];
inline int TransactionFinishResponse::partitions_size() const {
  return partitions_.size();
}
inline void TransactionFinishResponse::clear_partitions() {
  partitions_.Clear();
}
inline ::google::protobuf::int32 TransactionFinishResponse::partitions(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionFinishResponse.partitions)
  return partitions_.Get(index);
}
inline void TransactionFinishResponse::set_partitions(int index, ::google::protobuf::int32 value) {
  partitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionFinishResponse.partitions)
}
inline void TransactionFinishResponse::add_partitions(::google::protobuf::int32 value) {
  partitions_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.TransactionFinishResponse.partitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransactionFinishResponse::partitions() const {
  // @@protoc_insertion_point(field_list:peloton.message.TransactionFinishResponse.partitions)
  return partitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransactionFinishResponse::mutable_partitions() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.TransactionFinishResponse.partitions)
  return &partitions_;
}

// -------------------------------------------------------------------

// TransactionRedirectRequest

// required int32 sender_site = 1;
inline bool TransactionRedirectRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionRedirectRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionRedirectRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionRedirectRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 TransactionRedirectRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionRedirectRequest.sender_site)
  return sender_site_;
}
inline void TransactionRedirectRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionRedirectRequest.sender_site)
}

// required bytes work = 2;
inline bool TransactionRedirectRequest::has_work() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionRedirectRequest::set_has_work() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionRedirectRequest::clear_has_work() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionRedirectRequest::clear_work() {
  work_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_work();
}
inline const ::std::string& TransactionRedirectRequest::work() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionRedirectRequest.work)
  return work_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionRedirectRequest::set_work(const ::std::string& value) {
  set_has_work();
  work_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionRedirectRequest.work)
}
inline void TransactionRedirectRequest::set_work(const char* value) {
  set_has_work();
  work_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionRedirectRequest.work)
}
inline void TransactionRedirectRequest::set_work(const void* value, size_t size) {
  set_has_work();
  work_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionRedirectRequest.work)
}
inline ::std::string* TransactionRedirectRequest::mutable_work() {
  set_has_work();
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionRedirectRequest.work)
  return work_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionRedirectRequest::release_work() {
  clear_has_work();
  return work_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionRedirectRequest::set_allocated_work(::std::string* work) {
  if (work != NULL) {
    set_has_work();
  } else {
    clear_has_work();
  }
  work_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), work);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.TransactionRedirectRequest.work)
}

// optional int64 orig_txn_id = 3;
inline bool TransactionRedirectRequest::has_orig_txn_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionRedirectRequest::set_has_orig_txn_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionRedirectRequest::clear_has_orig_txn_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionRedirectRequest::clear_orig_txn_id() {
  orig_txn_id_ = GOOGLE_LONGLONG(0);
  clear_has_orig_txn_id();
}
inline ::google::protobuf::int64 TransactionRedirectRequest::orig_txn_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionRedirectRequest.orig_txn_id)
  return orig_txn_id_;
}
inline void TransactionRedirectRequest::set_orig_txn_id(::google::protobuf::int64 value) {
  set_has_orig_txn_id();
  orig_txn_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionRedirectRequest.orig_txn_id)
}

// -------------------------------------------------------------------

// TransactionRedirectResponse

// required int32 sender_site = 1;
inline bool TransactionRedirectResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionRedirectResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionRedirectResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionRedirectResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 TransactionRedirectResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionRedirectResponse.sender_site)
  return sender_site_;
}
inline void TransactionRedirectResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionRedirectResponse.sender_site)
}

// required bytes output = 2;
inline bool TransactionRedirectResponse::has_output() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionRedirectResponse::set_has_output() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionRedirectResponse::clear_has_output() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionRedirectResponse::clear_output() {
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output();
}
inline const ::std::string& TransactionRedirectResponse::output() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionRedirectResponse.output)
  return output_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionRedirectResponse::set_output(const ::std::string& value) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionRedirectResponse.output)
}
inline void TransactionRedirectResponse::set_output(const char* value) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionRedirectResponse.output)
}
inline void TransactionRedirectResponse::set_output(const void* value, size_t size) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionRedirectResponse.output)
}
inline ::std::string* TransactionRedirectResponse::mutable_output() {
  set_has_output();
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionRedirectResponse.output)
  return output_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionRedirectResponse::release_output() {
  clear_has_output();
  return output_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionRedirectResponse::set_allocated_output(::std::string* output) {
  if (output != NULL) {
    set_has_output();
  } else {
    clear_has_output();
  }
  output_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.TransactionRedirectResponse.output)
}

// -------------------------------------------------------------------

// TransactionDebugRequest

// required int32 sender_site = 1;
inline bool TransactionDebugRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionDebugRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionDebugRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionDebugRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 TransactionDebugRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionDebugRequest.sender_site)
  return sender_site_;
}
inline void TransactionDebugRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionDebugRequest.sender_site)
}

// required int64 transaction_id = 2;
inline bool TransactionDebugRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionDebugRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionDebugRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionDebugRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 TransactionDebugRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionDebugRequest.transaction_id)
  return transaction_id_;
}
inline void TransactionDebugRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionDebugRequest.transaction_id)
}

// -------------------------------------------------------------------

// TransactionDebugResponse

// required int32 sender_site = 1;
inline bool TransactionDebugResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransactionDebugResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransactionDebugResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransactionDebugResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 TransactionDebugResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionDebugResponse.sender_site)
  return sender_site_;
}
inline void TransactionDebugResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionDebugResponse.sender_site)
}

// required .peloton.message.Status status = 2;
inline bool TransactionDebugResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransactionDebugResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransactionDebugResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransactionDebugResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status TransactionDebugResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionDebugResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void TransactionDebugResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TransactionDebugResponse.status)
}

// required string debug = 3;
inline bool TransactionDebugResponse::has_debug() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransactionDebugResponse::set_has_debug() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransactionDebugResponse::clear_has_debug() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransactionDebugResponse::clear_debug() {
  debug_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_debug();
}
inline const ::std::string& TransactionDebugResponse::debug() const {
  // @@protoc_insertion_point(field_get:peloton.message.TransactionDebugResponse.debug)
  return debug_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionDebugResponse::set_debug(const ::std::string& value) {
  set_has_debug();
  debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.TransactionDebugResponse.debug)
}
inline void TransactionDebugResponse::set_debug(const char* value) {
  set_has_debug();
  debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.TransactionDebugResponse.debug)
}
inline void TransactionDebugResponse::set_debug(const char* value, size_t size) {
  set_has_debug();
  debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.TransactionDebugResponse.debug)
}
inline ::std::string* TransactionDebugResponse::mutable_debug() {
  set_has_debug();
  // @@protoc_insertion_point(field_mutable:peloton.message.TransactionDebugResponse.debug)
  return debug_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionDebugResponse::release_debug() {
  clear_has_debug();
  return debug_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionDebugResponse::set_allocated_debug(::std::string* debug) {
  if (debug != NULL) {
    set_has_debug();
  } else {
    clear_has_debug();
  }
  debug_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.TransactionDebugResponse.debug)
}

// -------------------------------------------------------------------

// SendDataRequest

// required int64 transaction_id = 1;
inline bool SendDataRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendDataRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendDataRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendDataRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 SendDataRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.SendDataRequest.transaction_id)
  return transaction_id_;
}
inline void SendDataRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.SendDataRequest.transaction_id)
}

// required int32 sender_site = 2;
inline bool SendDataRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendDataRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendDataRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendDataRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 SendDataRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.SendDataRequest.sender_site)
  return sender_site_;
}
inline void SendDataRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.SendDataRequest.sender_site)
}

// repeated int32 dep_id = 3 [packed = true];
inline int SendDataRequest::dep_id_size() const {
  return dep_id_.size();
}
inline void SendDataRequest::clear_dep_id() {
  dep_id_.Clear();
}
inline ::google::protobuf::int32 SendDataRequest::dep_id(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.SendDataRequest.dep_id)
  return dep_id_.Get(index);
}
inline void SendDataRequest::set_dep_id(int index, ::google::protobuf::int32 value) {
  dep_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.SendDataRequest.dep_id)
}
inline void SendDataRequest::add_dep_id(::google::protobuf::int32 value) {
  dep_id_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.SendDataRequest.dep_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SendDataRequest::dep_id() const {
  // @@protoc_insertion_point(field_list:peloton.message.SendDataRequest.dep_id)
  return dep_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SendDataRequest::mutable_dep_id() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.SendDataRequest.dep_id)
  return &dep_id_;
}

// repeated bytes data = 4;
inline int SendDataRequest::data_size() const {
  return data_.size();
}
inline void SendDataRequest::clear_data() {
  data_.Clear();
}
inline const ::std::string& SendDataRequest::data(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.SendDataRequest.data)
  return data_.Get(index);
}
inline ::std::string* SendDataRequest::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:peloton.message.SendDataRequest.data)
  return data_.Mutable(index);
}
inline void SendDataRequest::set_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:peloton.message.SendDataRequest.data)
  data_.Mutable(index)->assign(value);
}
inline void SendDataRequest::set_data(int index, const char* value) {
  data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:peloton.message.SendDataRequest.data)
}
inline void SendDataRequest::set_data(int index, const void* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:peloton.message.SendDataRequest.data)
}
inline ::std::string* SendDataRequest::add_data() {
  return data_.Add();
}
inline void SendDataRequest::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:peloton.message.SendDataRequest.data)
}
inline void SendDataRequest::add_data(const char* value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:peloton.message.SendDataRequest.data)
}
inline void SendDataRequest::add_data(const void* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:peloton.message.SendDataRequest.data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SendDataRequest::data() const {
  // @@protoc_insertion_point(field_list:peloton.message.SendDataRequest.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SendDataRequest::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.SendDataRequest.data)
  return &data_;
}

// -------------------------------------------------------------------

// SendDataResponse

// required int64 transaction_id = 1;
inline bool SendDataResponse::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendDataResponse::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendDataResponse::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendDataResponse::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 SendDataResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.SendDataResponse.transaction_id)
  return transaction_id_;
}
inline void SendDataResponse::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.SendDataResponse.transaction_id)
}

// repeated int32 partitions = 2 [packed = true];
inline int SendDataResponse::partitions_size() const {
  return partitions_.size();
}
inline void SendDataResponse::clear_partitions() {
  partitions_.Clear();
}
inline ::google::protobuf::int32 SendDataResponse::partitions(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.SendDataResponse.partitions)
  return partitions_.Get(index);
}
inline void SendDataResponse::set_partitions(int index, ::google::protobuf::int32 value) {
  partitions_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.SendDataResponse.partitions)
}
inline void SendDataResponse::add_partitions(::google::protobuf::int32 value) {
  partitions_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.SendDataResponse.partitions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SendDataResponse::partitions() const {
  // @@protoc_insertion_point(field_list:peloton.message.SendDataResponse.partitions)
  return partitions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SendDataResponse::mutable_partitions() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.SendDataResponse.partitions)
  return &partitions_;
}

// required int32 sender_site = 3;
inline bool SendDataResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendDataResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendDataResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendDataResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 SendDataResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.SendDataResponse.sender_site)
  return sender_site_;
}
inline void SendDataResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.SendDataResponse.sender_site)
}

// required .peloton.message.Status status = 4;
inline bool SendDataResponse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendDataResponse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendDataResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendDataResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status SendDataResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.SendDataResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void SendDataResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.SendDataResponse.status)
}

// -------------------------------------------------------------------

// InitializeRequest

// required int32 sender_site = 1;
inline bool InitializeRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitializeRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitializeRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitializeRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 InitializeRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.InitializeRequest.sender_site)
  return sender_site_;
}
inline void InitializeRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.InitializeRequest.sender_site)
}

// required int64 instance_id = 2;
inline bool InitializeRequest::has_instance_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitializeRequest::set_has_instance_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitializeRequest::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitializeRequest::clear_instance_id() {
  instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_instance_id();
}
inline ::google::protobuf::int64 InitializeRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.InitializeRequest.instance_id)
  return instance_id_;
}
inline void InitializeRequest::set_instance_id(::google::protobuf::int64 value) {
  set_has_instance_id();
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.InitializeRequest.instance_id)
}

// -------------------------------------------------------------------

// InitializeResponse

// required int32 sender_site = 1;
inline bool InitializeResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitializeResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitializeResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitializeResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 InitializeResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.InitializeResponse.sender_site)
  return sender_site_;
}
inline void InitializeResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.InitializeResponse.sender_site)
}

// required .peloton.message.Status status = 2;
inline bool InitializeResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitializeResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitializeResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitializeResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status InitializeResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.InitializeResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void InitializeResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.InitializeResponse.status)
}

// -------------------------------------------------------------------

// ShutdownPrepareRequest

// required int32 sender_site = 1;
inline bool ShutdownPrepareRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShutdownPrepareRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShutdownPrepareRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShutdownPrepareRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 ShutdownPrepareRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.ShutdownPrepareRequest.sender_site)
  return sender_site_;
}
inline void ShutdownPrepareRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.ShutdownPrepareRequest.sender_site)
}

// optional bytes error = 2;
inline bool ShutdownPrepareRequest::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShutdownPrepareRequest::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShutdownPrepareRequest::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShutdownPrepareRequest::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& ShutdownPrepareRequest::error() const {
  // @@protoc_insertion_point(field_get:peloton.message.ShutdownPrepareRequest.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShutdownPrepareRequest::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peloton.message.ShutdownPrepareRequest.error)
}
inline void ShutdownPrepareRequest::set_error(const char* value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peloton.message.ShutdownPrepareRequest.error)
}
inline void ShutdownPrepareRequest::set_error(const void* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peloton.message.ShutdownPrepareRequest.error)
}
inline ::std::string* ShutdownPrepareRequest::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:peloton.message.ShutdownPrepareRequest.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShutdownPrepareRequest::release_error() {
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShutdownPrepareRequest::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:peloton.message.ShutdownPrepareRequest.error)
}

// -------------------------------------------------------------------

// ShutdownPrepareResponse

// required int32 sender_site = 1;
inline bool ShutdownPrepareResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShutdownPrepareResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShutdownPrepareResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShutdownPrepareResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 ShutdownPrepareResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.ShutdownPrepareResponse.sender_site)
  return sender_site_;
}
inline void ShutdownPrepareResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.ShutdownPrepareResponse.sender_site)
}

// -------------------------------------------------------------------

// ShutdownRequest

// required int32 sender_site = 1;
inline bool ShutdownRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShutdownRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShutdownRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShutdownRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 ShutdownRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.ShutdownRequest.sender_site)
  return sender_site_;
}
inline void ShutdownRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.ShutdownRequest.sender_site)
}

// required int32 exit_status = 2;
inline bool ShutdownRequest::has_exit_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShutdownRequest::set_has_exit_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShutdownRequest::clear_has_exit_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShutdownRequest::clear_exit_status() {
  exit_status_ = 0;
  clear_has_exit_status();
}
inline ::google::protobuf::int32 ShutdownRequest::exit_status() const {
  // @@protoc_insertion_point(field_get:peloton.message.ShutdownRequest.exit_status)
  return exit_status_;
}
inline void ShutdownRequest::set_exit_status(::google::protobuf::int32 value) {
  set_has_exit_status();
  exit_status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.ShutdownRequest.exit_status)
}

// -------------------------------------------------------------------

// ShutdownResponse

// required int32 sender_site = 1;
inline bool ShutdownResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShutdownResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShutdownResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShutdownResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 ShutdownResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.ShutdownResponse.sender_site)
  return sender_site_;
}
inline void ShutdownResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.ShutdownResponse.sender_site)
}

// -------------------------------------------------------------------

// HeartbeatRequest

// required int32 sender_site = 1;
inline bool HeartbeatRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 HeartbeatRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.HeartbeatRequest.sender_site)
  return sender_site_;
}
inline void HeartbeatRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.HeartbeatRequest.sender_site)
}

// required int64 last_transaction_id = 2;
inline bool HeartbeatRequest::has_last_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartbeatRequest::set_has_last_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartbeatRequest::clear_has_last_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartbeatRequest::clear_last_transaction_id() {
  last_transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_last_transaction_id();
}
inline ::google::protobuf::int64 HeartbeatRequest::last_transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.HeartbeatRequest.last_transaction_id)
  return last_transaction_id_;
}
inline void HeartbeatRequest::set_last_transaction_id(::google::protobuf::int64 value) {
  set_has_last_transaction_id();
  last_transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.HeartbeatRequest.last_transaction_id)
}

// -------------------------------------------------------------------

// HeartbeatResponse

// required int32 sender_site = 1;
inline bool HeartbeatResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 HeartbeatResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.HeartbeatResponse.sender_site)
  return sender_site_;
}
inline void HeartbeatResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.HeartbeatResponse.sender_site)
}

// required .peloton.message.Status status = 2;
inline bool HeartbeatResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartbeatResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartbeatResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartbeatResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status HeartbeatResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.HeartbeatResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void HeartbeatResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.HeartbeatResponse.status)
}

// -------------------------------------------------------------------

// UnevictDataRequest

// required int32 sender_site = 1;
inline bool UnevictDataRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnevictDataRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnevictDataRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnevictDataRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 UnevictDataRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataRequest.sender_site)
  return sender_site_;
}
inline void UnevictDataRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataRequest.sender_site)
}

// required int64 transaction_id = 2;
inline bool UnevictDataRequest::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnevictDataRequest::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnevictDataRequest::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnevictDataRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 UnevictDataRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataRequest.transaction_id)
  return transaction_id_;
}
inline void UnevictDataRequest::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataRequest.transaction_id)
}

// required int32 partition_id = 3;
inline bool UnevictDataRequest::has_partition_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnevictDataRequest::set_has_partition_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnevictDataRequest::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnevictDataRequest::clear_partition_id() {
  partition_id_ = 0;
  clear_has_partition_id();
}
inline ::google::protobuf::int32 UnevictDataRequest::partition_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataRequest.partition_id)
  return partition_id_;
}
inline void UnevictDataRequest::set_partition_id(::google::protobuf::int32 value) {
  set_has_partition_id();
  partition_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataRequest.partition_id)
}

// required int32 table_id = 4;
inline bool UnevictDataRequest::has_table_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnevictDataRequest::set_has_table_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnevictDataRequest::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnevictDataRequest::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 UnevictDataRequest::table_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataRequest.table_id)
  return table_id_;
}
inline void UnevictDataRequest::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataRequest.table_id)
}

// repeated int32 block_ids = 5 [packed = true];
inline int UnevictDataRequest::block_ids_size() const {
  return block_ids_.size();
}
inline void UnevictDataRequest::clear_block_ids() {
  block_ids_.Clear();
}
inline ::google::protobuf::int32 UnevictDataRequest::block_ids(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataRequest.block_ids)
  return block_ids_.Get(index);
}
inline void UnevictDataRequest::set_block_ids(int index, ::google::protobuf::int32 value) {
  block_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataRequest.block_ids)
}
inline void UnevictDataRequest::add_block_ids(::google::protobuf::int32 value) {
  block_ids_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.UnevictDataRequest.block_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UnevictDataRequest::block_ids() const {
  // @@protoc_insertion_point(field_list:peloton.message.UnevictDataRequest.block_ids)
  return block_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UnevictDataRequest::mutable_block_ids() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.UnevictDataRequest.block_ids)
  return &block_ids_;
}

// repeated int32 tuple_offsets = 6 [packed = true];
inline int UnevictDataRequest::tuple_offsets_size() const {
  return tuple_offsets_.size();
}
inline void UnevictDataRequest::clear_tuple_offsets() {
  tuple_offsets_.Clear();
}
inline ::google::protobuf::int32 UnevictDataRequest::tuple_offsets(int index) const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataRequest.tuple_offsets)
  return tuple_offsets_.Get(index);
}
inline void UnevictDataRequest::set_tuple_offsets(int index, ::google::protobuf::int32 value) {
  tuple_offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataRequest.tuple_offsets)
}
inline void UnevictDataRequest::add_tuple_offsets(::google::protobuf::int32 value) {
  tuple_offsets_.Add(value);
  // @@protoc_insertion_point(field_add:peloton.message.UnevictDataRequest.tuple_offsets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UnevictDataRequest::tuple_offsets() const {
  // @@protoc_insertion_point(field_list:peloton.message.UnevictDataRequest.tuple_offsets)
  return tuple_offsets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UnevictDataRequest::mutable_tuple_offsets() {
  // @@protoc_insertion_point(field_mutable_list:peloton.message.UnevictDataRequest.tuple_offsets)
  return &tuple_offsets_;
}

// required int64 new_transaction_id = 7;
inline bool UnevictDataRequest::has_new_transaction_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UnevictDataRequest::set_has_new_transaction_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UnevictDataRequest::clear_has_new_transaction_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UnevictDataRequest::clear_new_transaction_id() {
  new_transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_new_transaction_id();
}
inline ::google::protobuf::int64 UnevictDataRequest::new_transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataRequest.new_transaction_id)
  return new_transaction_id_;
}
inline void UnevictDataRequest::set_new_transaction_id(::google::protobuf::int64 value) {
  set_has_new_transaction_id();
  new_transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataRequest.new_transaction_id)
}

// -------------------------------------------------------------------

// UnevictDataResponse

// required int32 sender_site = 1;
inline bool UnevictDataResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnevictDataResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnevictDataResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnevictDataResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 UnevictDataResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataResponse.sender_site)
  return sender_site_;
}
inline void UnevictDataResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataResponse.sender_site)
}

// required .peloton.message.Status status = 2;
inline bool UnevictDataResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnevictDataResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnevictDataResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnevictDataResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::peloton::message::Status UnevictDataResponse::status() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataResponse.status)
  return static_cast< ::peloton::message::Status >(status_);
}
inline void UnevictDataResponse::set_status(::peloton::message::Status value) {
  assert(::peloton::message::Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataResponse.status)
}

// required int64 transaction_id = 3;
inline bool UnevictDataResponse::has_transaction_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnevictDataResponse::set_has_transaction_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnevictDataResponse::clear_has_transaction_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnevictDataResponse::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
  clear_has_transaction_id();
}
inline ::google::protobuf::int64 UnevictDataResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataResponse.transaction_id)
  return transaction_id_;
}
inline void UnevictDataResponse::set_transaction_id(::google::protobuf::int64 value) {
  set_has_transaction_id();
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataResponse.transaction_id)
}

// required int32 partition_id = 4;
inline bool UnevictDataResponse::has_partition_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnevictDataResponse::set_has_partition_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnevictDataResponse::clear_has_partition_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnevictDataResponse::clear_partition_id() {
  partition_id_ = 0;
  clear_has_partition_id();
}
inline ::google::protobuf::int32 UnevictDataResponse::partition_id() const {
  // @@protoc_insertion_point(field_get:peloton.message.UnevictDataResponse.partition_id)
  return partition_id_;
}
inline void UnevictDataResponse::set_partition_id(::google::protobuf::int32 value) {
  set_has_partition_id();
  partition_id_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.UnevictDataResponse.partition_id)
}

// -------------------------------------------------------------------

// TimeSyncRequest

// required int32 sender_site = 1;
inline bool TimeSyncRequest::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeSyncRequest::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeSyncRequest::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeSyncRequest::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 TimeSyncRequest::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.TimeSyncRequest.sender_site)
  return sender_site_;
}
inline void TimeSyncRequest::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TimeSyncRequest.sender_site)
}

// required int64 t0_s = 2;
inline bool TimeSyncRequest::has_t0_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeSyncRequest::set_has_t0_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeSyncRequest::clear_has_t0_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeSyncRequest::clear_t0_s() {
  t0_s_ = GOOGLE_LONGLONG(0);
  clear_has_t0_s();
}
inline ::google::protobuf::int64 TimeSyncRequest::t0_s() const {
  // @@protoc_insertion_point(field_get:peloton.message.TimeSyncRequest.t0_s)
  return t0_s_;
}
inline void TimeSyncRequest::set_t0_s(::google::protobuf::int64 value) {
  set_has_t0_s();
  t0_s_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TimeSyncRequest.t0_s)
}

// -------------------------------------------------------------------

// TimeSyncResponse

// required int32 sender_site = 1;
inline bool TimeSyncResponse::has_sender_site() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeSyncResponse::set_has_sender_site() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeSyncResponse::clear_has_sender_site() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeSyncResponse::clear_sender_site() {
  sender_site_ = 0;
  clear_has_sender_site();
}
inline ::google::protobuf::int32 TimeSyncResponse::sender_site() const {
  // @@protoc_insertion_point(field_get:peloton.message.TimeSyncResponse.sender_site)
  return sender_site_;
}
inline void TimeSyncResponse::set_sender_site(::google::protobuf::int32 value) {
  set_has_sender_site();
  sender_site_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TimeSyncResponse.sender_site)
}

// required int64 t0_s = 2;
inline bool TimeSyncResponse::has_t0_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeSyncResponse::set_has_t0_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeSyncResponse::clear_has_t0_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeSyncResponse::clear_t0_s() {
  t0_s_ = GOOGLE_LONGLONG(0);
  clear_has_t0_s();
}
inline ::google::protobuf::int64 TimeSyncResponse::t0_s() const {
  // @@protoc_insertion_point(field_get:peloton.message.TimeSyncResponse.t0_s)
  return t0_s_;
}
inline void TimeSyncResponse::set_t0_s(::google::protobuf::int64 value) {
  set_has_t0_s();
  t0_s_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TimeSyncResponse.t0_s)
}

// required int64 t0_r = 3;
inline bool TimeSyncResponse::has_t0_r() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TimeSyncResponse::set_has_t0_r() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TimeSyncResponse::clear_has_t0_r() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TimeSyncResponse::clear_t0_r() {
  t0_r_ = GOOGLE_LONGLONG(0);
  clear_has_t0_r();
}
inline ::google::protobuf::int64 TimeSyncResponse::t0_r() const {
  // @@protoc_insertion_point(field_get:peloton.message.TimeSyncResponse.t0_r)
  return t0_r_;
}
inline void TimeSyncResponse::set_t0_r(::google::protobuf::int64 value) {
  set_has_t0_r();
  t0_r_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TimeSyncResponse.t0_r)
}

// required int64 t1_s = 4;
inline bool TimeSyncResponse::has_t1_s() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TimeSyncResponse::set_has_t1_s() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TimeSyncResponse::clear_has_t1_s() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TimeSyncResponse::clear_t1_s() {
  t1_s_ = GOOGLE_LONGLONG(0);
  clear_has_t1_s();
}
inline ::google::protobuf::int64 TimeSyncResponse::t1_s() const {
  // @@protoc_insertion_point(field_get:peloton.message.TimeSyncResponse.t1_s)
  return t1_s_;
}
inline void TimeSyncResponse::set_t1_s(::google::protobuf::int64 value) {
  set_has_t1_s();
  t1_s_ = value;
  // @@protoc_insertion_point(field_set:peloton.message.TimeSyncResponse.t1_s)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace peloton

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::peloton::message::Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::peloton::message::Status>() {
  return ::peloton::message::Status_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_abstract_5fservice_2eproto__INCLUDED
